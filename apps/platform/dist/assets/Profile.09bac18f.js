var qe=Object.defineProperty,Ce=Object.defineProperties;var je=Object.getOwnPropertyDescriptors;var se=Object.getOwnPropertySymbols;var ze=Object.prototype.hasOwnProperty,Ae=Object.prototype.propertyIsEnumerable;var le=(e,n,i)=>n in e?qe(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,O=(e,n)=>{for(var i in n||(n={}))ze.call(n,i)&&le(e,i,n[i]);if(se)for(var i of se(n))Ae.call(n,i)&&le(e,i,n[i]);return e},H=(e,n)=>Ce(e,je(n));import{j as f,a as d,b as k,L as v,af as Qe,R as Ne,m as _e,ag as $,r as oe,n as T,ah as Be,ai as m,aj as Le,ak as He,al as Me}from"./index.ec2996a9.js";import{u as h,P as Ge,C as Ke,S as N,a as ne,c as We,b as Ye,d as Ue,e as Xe,f as Je}from"./urls.4a718162.js";import{D as Ze}from"./Description.b8e792eb.js";import{B as en,a as nn}from"./Body.34aa58e8.js";import{l as an,t as tn,c as rn,s as be,m as dn,w as sn,a as ln}from"./d3-dag.esm.37ab63f1.js";import"./transform.5b5ae4b7.js";import{m as on}from"./max.9f900090.js";import{l as cn}from"./line.c272abf8.js";import{T as un}from"./TableDrawer.dc5a9538.js";import{D as Fe}from"./DataTable.ed138147.js";import{i as mn}from"./partnerPreviewUtils.81b319ce.js";import"./ErrorBoundary.830e98b1.js";import"./CardContent.9d8c6621.js";import"./LinearProgress.9b082d1f.js";import"./graphiql.min.35449f36.js";import"./TablePagination.6ed57057.js";import"./FormGroup.c3f2d311.js";import"./FormControlLabel.47f62ae2.js";import"./ToolbarSelect.cd37b9c4.js";var _={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"DiseaseProfileHeaderFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"synonyms"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"relation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"terms"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:107}};_.loc.source={body:`fragment DiseaseProfileHeaderFragment on Disease {
  description
  synonyms {
    relation
    terms
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function V(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){V(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){V(a,n)}),e.definitions&&e.definitions.forEach(function(a){V(a,n)})}var G={};(function(){_.definitions.forEach(function(n){if(n.name){var i=new Set;V(n,i),G[n.name.value]=i}})})();function ce(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function fn(e,n){var i={kind:e.kind,definitions:[ce(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=G[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=G[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=ce(e,t);l&&i.definitions.push(l)}),i}fn(_,"DiseaseProfileHeaderFragment");const vn=e=>{const n=[];return e.forEach(i=>{i.terms.forEach(a=>{const s=n.find(r=>r.label===a);s?s.tooltip.push(i.relation):n.push({label:a,tooltip:[i.relation]})})}),n.forEach(i=>i.tooltip=i.tooltip.join(", ")),n};function ie(){const{loading:e,error:n,data:i}=h(),a=vn((i==null?void 0:i.disease.synonyms)||[]);return n?null:f(Ge,{children:[d(Ze,{loading:e,children:i==null?void 0:i.disease.description}),a.length>0?d(Ke,{title:"Synonyms",loading:e,children:a}):null]})}ie.fragments={profileHeader:_};var b={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"DiseaseKnownDrugsSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"knownDrugs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"uniqueDrugs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"uniqueTargets"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:120}};b.loc.source={body:`fragment DiseaseKnownDrugsSummaryFragment on Disease {
  knownDrugs {
    count
    uniqueDrugs
    uniqueTargets
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function P(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){P(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){P(a,n)}),e.definitions&&e.definitions.forEach(function(a){P(a,n)})}var K={};(function(){b.definitions.forEach(function(n){if(n.name){var i=new Set;P(n,i),K[n.name.value]=i}})})();function ue(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function kn(e,n){var i={kind:e.kind,definitions:[ue(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=K[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=K[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=ue(e,t);l&&i.definitions.push(l)}),i}kn(b,"DiseaseKnownDrugsSummaryFragment");function we({definition:e}){const n=h(b);return d(N,{definition:e,request:n,renderSummary:i=>f(k,{children:[(i.knownDrugs.uniqueDrugs||0).toLocaleString()," drugs with"," ",(i.knownDrugs.uniqueTargets||0).toLocaleString()," targets"]})})}we.fragments={DiseaseKnownDrugsSummaryFragment:b};function pn({name:e}){return f(k,{children:["Clinical precedence for investigational or approved drugs indicated for"," ",d("strong",{children:e})," and curated mechanism of action. Source:"," ",d(v,{to:"https://www.ebi.ac.uk/chembl/",external:!0,children:"ChEMBL"}),"."]})}var B={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"KnownDrugsQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"cursor"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"freeTextQuery"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"10"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"knownDrugs"},arguments:[{kind:"Argument",name:{kind:"Name",value:"cursor"},value:{kind:"Variable",name:{kind:"Name",value:"cursor"}}},{kind:"Argument",name:{kind:"Name",value:"freeTextQuery"},value:{kind:"Variable",name:{kind:"Name",value:"freeTextQuery"}}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"phase"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"urls"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"drug"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mechanismsOfAction"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"actionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targets"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"urls"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"drugType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mechanismOfAction"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:813}};B.loc.source={body:`query KnownDrugsQuery(
  $efoId: String!
  $cursor: String
  $freeTextQuery: String
  $size: Int = 10
) {
  disease(efoId: $efoId) {
    id
    knownDrugs(cursor: $cursor, freeTextQuery: $freeTextQuery, size: $size) {
      count
      cursor
      rows {
        phase
        status
        urls {
          name
          url
        }
        disease {
          id
          name
        }
        drug {
          id
          name
          mechanismsOfAction {
            rows {
              actionType
              targets {
                id
              }
            }
          }
        }
        urls {
          url
          name
        }
        drugType
        mechanismOfAction
        target {
          id
          approvedName
          approvedSymbol
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function I(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){I(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){I(a,n)}),e.definitions&&e.definitions.forEach(function(a){I(a,n)})}var W={};(function(){B.definitions.forEach(function(n){if(n.name){var i=new Set;I(n,i),W[n.name.value]=i}})})();function me(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function hn(e,n){var i={kind:e.kind,definitions:[me(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=W[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=W[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=me(e,t);l&&i.definitions.push(l)}),i}hn(B,"KnownDrugsQuery");const gn=[{label:"diseaseId",exportValue:e=>e.disease.id},{label:"diseaseName",exportValue:e=>e.disease.name},{label:"drugId",exportValue:e=>e.drug.id},{label:"drugName",exportValue:e=>e.drug.name},{label:"type",exportValue:e=>e.drugType},{label:"mechanismOfAction",exportValue:e=>e.mechanismOfAction},{label:"actionType",exportValue:({drug:{mechanismsOfAction:e},target:n})=>{if(!e)return"";const i=new Set;return e.rows.forEach(s=>{s.targets.forEach(r=>{r.id===n.id&&i.add(s.actionType)})}),Array.from(i).map(s=>Qe(s))}},{label:"symbol",exportValue:e=>e.target.approvedSymbol},{label:"name",exportValue:e=>e.target.approvedName},{label:"phase",exportValue:e=>e.phase},{label:"status",exportValue:e=>e.status},{label:"source",exportValue:e=>e.urls.map(n=>n.url)}];function Sn({definition:e,id:n,label:i}){return d(en,{definition:e,entity:"disease",variables:{efoId:n},BODY_QUERY:B,Description:()=>d(pn,{name:i}),columnsToShow:["disease","drug","target","clinicalTrials"],stickyColumn:"drug",exportColumns:gn})}const yn={id:"knownDrugs",name:"Known Drugs",shortName:"KD",hasData:e=>{var n;return((n=e.knownDrugs)==null?void 0:n.count)>0||!1}};var Nn=Object.freeze(Object.defineProperty({__proto__:null,definition:yn,Summary:we,Body:Sn},Symbol.toStringTag,{value:"Module"}));function bn({name:e}){return f(Ne.Fragment,{children:["Ontology subgraph including children, ancestors and therapeutic areas of"," ",d("strong",{children:e}),". Source:"," ",d(v,{to:"https://www.ebi.ac.uk/efo/",external:!0,children:"EFO"}),"."]})}const Fn=_e({labelText:{"&:hover":{fontWeight:"700"}}});function wn(e,n){const i=[H(O({},n[e]),{nodeType:"anchor"})],a=[e],s=new Set([e]);for(;a.length>0;){const r=a.shift();n[r].parentIds.forEach(t=>{s.has(t)||(i.push(H(O({},n[t]),{nodeType:"ancestor"})),a.push(t),s.add(t))})}return i}function Dn(e,n,i){const a=[];return n.forEach(r=>{r.parentIds.includes(e)&&a.push({id:r.id,name:r.name,parentIds:[e],nodeType:"child"})}),wn(e,i).forEach(r=>{a.push(r)}),a}const De=an(),xe=tn(),Ee=rn(),xn=be().layering(De).decross(xe).coord(Ee);function En(e,n){return e.length<=n?e:e.slice(0,n)+"..."}function On(e){xn(e);const n={};let i=Number.NEGATIVE_INFINITY;return e.descendants().forEach(a=>{const{layer:s}=a;n[s]?n[s]++:n[s]=1,n[s]>i&&(i=n[s])}),e.links().forEach(a=>{a.points.forEach((s,r)=>{const o=a.source.layer+r;n[o]++,n[o]>i&&(i=n[o])})}),i}const S={anchor:"#ff6350",ancestor:"#3489ca",child:"#85b8df"},g=12,p=g/2,M=100,fe=cn().curve(dn);function $n({efoId:e,efo:n,name:i,idToDisease:a,measureRef:s,contentRect:r}){fe.x(c=>c.y-E).y(c=>c.x);const o=Fn(),{width:t}=r.bounds,l=Dn(e,n,a),u=ln()(l),te=On(u)*6;be().layering(De).decross(xe).coord(Ee).nodeSize(()=>{const c=g+3;return[c,c]}).size([te,t])(u);const re=u.descendants(),Ve=u.links(),de=t/(on(re,c=>c.layer)+1),E=de/2-p,Pe=de/8;return d("div",{ref:s,children:t?f("svg",{xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",width:t,height:te+M,children:[d("defs",{children:d("marker",{id:"arrowhead",orient:"auto",markerWidth:"2",markerHeight:"4",refX:"0.1",refY:"2",children:d("path",{d:"M0,0 V4 L2,2 Z",fill:"#5a5f5f"})})}),f("g",{transform:"translate(0, 10)",children:[d("rect",{x:"4",y:"11",width:g,height:g,fill:"none",stroke:"#e0e0e0",strokeWidth:"2"}),d("text",{x:"20",y:"17",fill:"#5a5f5f",dominantBaseline:"middle",fontSize:"12",children:"therapeutic area"}),d("circle",{cx:"10",cy:"34",r:p,fill:"none",stroke:"#e0e0e0",strokeWidth:"2"}),d("text",{fill:"#5a5f5f",x:"20",y:"34",dominantBaseline:"middle",fontSize:"12",children:"disease"}),d("circle",{cx:"150",cy:"0",r:p,fill:S.child,stroke:"#e0e0e0"}),d("text",{fill:"#5a5f5f",x:"160",y:"0",dominantBaseline:"middle",fontSize:"12",children:"descendants"}),d("circle",{cx:"150",cy:"17",r:p,fill:S.ancestor,stroke:"#e0e0e0"}),d("text",{fill:"#5a5f5f",x:"160",y:"17",dominantBaseline:"middle",fontSize:"12",children:"ancestors"}),d("circle",{cx:"150",cy:"34",r:p,fill:S.anchor,stroke:"#e0e0e0"}),d("text",{fill:"#5a5f5f",x:"160",y:"34",dominantBaseline:"middle",fontSize:"12",children:i})]}),f("g",{transform:`translate(${t/2}, 70)`,children:[d("text",{x:"-160",fontWeight:"bold",fontSize:"14",fill:"#5a5f5f",dominantBaseline:"middle",children:"GENERAL"}),d("text",{x:"100",fontWeight:"bold",fontSize:"14",fill:"#5a5f5f",dominantBaseline:"middle",children:"SPECIFIC"}),d("path",{markerEnd:"url(#arrowhead)",strokeWidth:"2",fill:"none",stroke:"#5a5f5f",d:"M-80,0 L80,0"})]}),d("g",{transform:`translate(0, ${M})`,children:Ve.map(({points:c,source:Ie,target:Re})=>d("path",{d:fe(c),fill:"none",strokeWidth:"2",stroke:"#eeeeee"},`${Ie.id}-${Re.id}`))}),d("g",{transform:`translate(0, ${M})`,children:re.map(c=>d(v,{to:`/disease/${c.data.id}`,className:o.labelText,children:d($,{title:`${c.data.name||"No name"} | ID: ${c.id}`,children:f("g",{children:[f("text",{x:c.y-E,y:c.x,dx:"9",fontSize:"12",dominantBaseline:"middle",fill:"#5a5f5f",style:{cursor:"pointer"},children:[d("title",{children:c.data.name}),En(c.data.name||"No name",Pe)]}),c.data.parentIds.length===0?d("rect",{x:c.y-p-E,y:c.x-p,width:g,height:g,fill:S[c.data.nodeType],stroke:"#e0e0e0"}):d("circle",{cx:c.y-E,cy:c.x,r:p,fill:S[c.data.nodeType],stroke:"#e0e0e0"})]})})},c.id))})]}):null})}var Tn=sn("bounds")($n);function Vn({definition:e,id:n,label:i}){const[a,s]=oe.exports.useState(null);return oe.exports.useEffect(()=>{let r=!0;return fetch(T.efoURL).then(o=>o.text()).then(o=>{if(r){const t=o.trim().split(`
`).map(JSON.parse);s(t)}}),()=>{r=!1}},[]),d(ne,{definition:e,request:{loading:!a,data:{efoNodes:a}},renderDescription:()=>d(bn,{name:i}),renderBody:({efoNodes:r})=>{const o=r.reduce((t,l)=>(t[l.id]=l,t),{});return d(Tn,{efoId:n,efo:r,name:i,idToDisease:o})}})}var F={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"OntologySummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isTherapeuticArea"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"therapeuticAreas"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:111}};F.loc.source={body:`fragment OntologySummaryFragment on Disease {
  id
  name
  isTherapeuticArea
  therapeuticAreas {
    id
  }
}`,name:"GraphQL request",locationOffset:{line:1,column:1}};function R(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){R(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){R(a,n)}),e.definitions&&e.definitions.forEach(function(a){R(a,n)})}var Y={};(function(){F.definitions.forEach(function(n){if(n.name){var i=new Set;R(n,i),Y[n.name.value]=i}})})();function ve(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Pn(e,n){var i={kind:e.kind,definitions:[ve(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Y[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=Y[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=ve(e,t);l&&i.definitions.push(l)}),i}Pn(F,"OntologySummaryFragment");function Oe({definition:e}){const n=h(F);return d(N,{definition:e,request:n,renderSummary:i=>i.isTherapeuticArea?"Therapeutic area":`Belongs to ${i.therapeuticAreas.length} therapeutic areas`})}Oe.fragments={OntologySummaryFragment:F};const In={id:"ontology",name:"Ontology",shortName:"O",hasData:()=>!0,external:!0};var Rn=Object.freeze(Object.defineProperty({__proto__:null,definition:In,Body:Vn,Summary:Oe},Symbol.toStringTag,{value:"Module"})),w={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"PhenotypesSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"phenotypes"},arguments:[{kind:"Argument",name:{kind:"Name",value:"page"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"index"},value:{kind:"IntValue",value:"0"}},{kind:"ObjectField",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:108}};w.loc.source={body:`fragment PhenotypesSummaryFragment on Disease {
  phenotypes(page: { index: 0, size: 0 }) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function q(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){q(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){q(a,n)}),e.definitions&&e.definitions.forEach(function(a){q(a,n)})}var U={};(function(){w.definitions.forEach(function(n){if(n.name){var i=new Set;q(n,i),U[n.name.value]=i}})})();function ke(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function qn(e,n){var i={kind:e.kind,definitions:[ke(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=U[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=U[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=ke(e,t);l&&i.definitions.push(l)}),i}qn(w,"PhenotypesSummaryFragment");function $e({definition:e}){const n=h(w);return d(N,{definition:e,request:n,renderSummary:i=>{var a;return f(k,{children:[((a=i.phenotypes)==null?void 0:a.count)||0," phenotypes"]})}})}$e.fragments={PhenotypesSummaryFragment:w};function Cn({name:e}){return f(k,{children:["Clinical signs and symptoms observed in ",d("strong",{children:e}),". Source:"," ",d(v,{to:"https://www.ebi.ac.uk/efo/",external:!0,children:"EFO"}),","," ",d(v,{to:"https://mondo.monarchinitiative.org/",external:!0,children:"MONDO"}),","," ",d(v,{to:"https://hpo.jax.org/app/",external:!0,children:"HPO"}),"."]})}var y={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"PhenotypesQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"index"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},defaultValue:{kind:"IntValue",value:"0"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},defaultValue:{kind:"IntValue",value:"10"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"phenotypes"},arguments:[{kind:"Argument",name:{kind:"Name",value:"page"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"index"},value:{kind:"Variable",name:{kind:"Name",value:"index"}}},{kind:"ObjectField",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"phenotypeHPO"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"namespace"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"phenotypeEFO"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"evidence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aspect"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bioCuration"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidenceType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"frequency"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"frequencyHPO"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"qualifierNot"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"onset"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"modifiers"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"references"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sex"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resource"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:818}};y.loc.source={body:`query PhenotypesQuery($efoId: String!, $index: Int! = 0, $size: Int! = 10) {
  disease(efoId: $efoId) {
    id
    phenotypes(page: { index: $index, size: $size }) {
      count
      rows {
        phenotypeHPO {
          id
          name
          description
          namespace
        }
        phenotypeEFO {
          id
          name
        }
        evidence {
          aspect
          bioCuration
          diseaseFromSourceId
          diseaseFromSource
          evidenceType
          frequency
          frequencyHPO {
            name
            id
          }
          qualifierNot
          onset {
            name
            id
          }
          modifiers {
            name
            id
          }
          references
          sex
          resource
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function C(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){C(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){C(a,n)}),e.definitions&&e.definitions.forEach(function(a){C(a,n)})}var X={};(function(){y.definitions.forEach(function(n){if(n.name){var i=new Set;C(n,i),X[n.name.value]=i}})})();function pe(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function jn(e,n){var i={kind:e.kind,definitions:[pe(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=X[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=X[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=pe(e,t);l&&i.definitions.push(l)}),i}jn(y,"PhenotypesQuery");const zn={IEA:"Inferred from Electronic Annotations (IEA) are extracted by parsing the Clinical Features sections of the Online Mendelian Inheritance in Man resource",PCS:"Published Clinical Study (PCS) are annotations extracted from articles in the medical literature with the PubMed ID of the published study (if available)",TAS:"Traceable Author Statement (TAS) is used for information gleaned from knowledge bases such as OMIM or Orphanet that have derived the information from a published source"},An={P:"Phenotypic abnormality",I:"Inheritance",C:"Onset and clinical course",M:"Clinical modifier"},Qn=[{id:"qualifierNot",label:"Qualifier",exportLabel:"qualifierNot",renderCell:({evidence:e})=>e.qualifierNot?"NOT":"",filterValue:({evidence:e})=>e.qualifierNot?"NOT":"",exportValue:({evidence:e})=>e.qualifierNot?"NOT":""},{id:"phenotypeHPO",label:"Phenotype",renderCell:({phenotypeEFO:e,phenotypeHPO:n})=>{const i=e!=null&&e.id?d(v,{to:`/disease/${e.id}`,children:n.name}):d(k,{children:n.name||m});return n.description?d($,{title:`Description: ${n.description}`,showHelpIcon:!0,children:i}):d(k,{children:i})},filterValue:e=>e.phenotypeHPO.name,exportValue:e=>e.phenotypeHPO.name},{id:"phenotypeHDOid",label:"Phenotype ID",renderCell:({phenotypeHPO:e})=>{const n=e.id.replace("_",":");return d(v,{external:!0,to:`https://identifiers.org/ols/${n}`,children:n})},filterValue:e=>e.phenotypeHPO.id.replace("_",":"),exportValue:e=>e.phenotypeHPO.id.replace("_",":")},{id:"aspect",label:"Aspect",renderCell:({evidence:e})=>e.aspect?d($,{title:`Sub-ontology: ${e.aspect} (${An[e.aspect]})`,showHelpIcon:!0,children:e.aspect}):m,filterValue:e=>e.evidence.aspect,exportValue:e=>e.evidence.aspect},{id:"frequency",label:"Frequency",renderCell:({evidence:e})=>e.frequencyHPO?e.frequencyHPO.id?d(v,{external:!0,to:`https://identifiers.org/ols/${e.frequencyHPO.id.replace("_",":")}`,children:e.frequencyHPO.name}):e.frequencyHPO.name:m,filterValue:e=>{var n;return((n=e.evidence.frequencyHPO)==null?void 0:n.name)||m},exportValue:e=>{var n;return((n=e.evidence.frequencyHPO)==null?void 0:n.name)||m}},{id:"onset",label:"Onset",renderCell:({evidence:e})=>{var n;return((n=e.onset)==null?void 0:n.length)>0?e.onset.map((i,a)=>f("span",{children:[d(v,{external:!0,to:`https://identifiers.org/ols/${i.id.replace("_",":")}`,children:i.name}),d("br",{})]},a)):m},filterValue:e=>{var n;return((n=e.evidence.onset)==null?void 0:n.map(i=>i.name).join())||m},exportValue:e=>{var n;return((n=e.evidence.onset)==null?void 0:n.map(i=>i.name).join())||m}},{id:"modifier",label:"Modifier",renderCell:({evidence:e})=>{var n;return((n=e.modifiers)==null?void 0:n.length)>0?e.modifiers.map((i,a)=>f("span",{children:[d(v,{external:!0,to:`https://identifiers.org/ols/${i.id.replace("_",":")}`,children:i.name}),d("br",{})]},a)):m},filterValue:e=>{var n;return((n=e.evidence.modifiers)==null?void 0:n.map(i=>i.name).join())||m},exportValue:e=>{var n;return((n=e.evidence.modifiers)==null?void 0:n.map(i=>i.name).join())||m}},{id:"sex",label:"Sex",renderCell:({evidence:e})=>Le.capitalize(e.sex)||m,filterValue:e=>e.evidence.sex||m},{id:"evidenceType",label:"Evidence",renderCell:({evidence:e})=>{var n;return e.evidenceType?d($,{title:zn[(n=e.evidenceType)==null?void 0:n.toUpperCase()],showHelpIcon:!0,children:e.evidenceType}):m},filterValue:e=>e.evidence.evidenceType||m,exportValue:e=>e.evidence.evidenceType||m},{id:"source",label:"Source",renderCell:({evidence:e})=>e.resource||m,filterValue:e=>e.evidence.resource||m,exportValue:e=>e.evidence.resource||m},{id:"references",label:"References",renderCell:({evidence:e})=>{if(!e.references||e.references.length===0)return m;const n=e.references.map(i=>({url:i.toUpperCase().startsWith("PMID:")?`https://europepmc.org/search?query=EXT_ID:${i.split(":").pop()}`:`https://hpo.jax.org/app/browse/disease/${i}`,name:i,group:"References"}));return d(un,{entries:n})},filterValue:e=>{var n;return((n=e.evidence.references)==null?void 0:n.map(i=>i).join())||m},exportValue:e=>{var n;return((n=e.evidence.references)==null?void 0:n.map(i=>i).join())||m}}];function _n({definition:e,label:n,id:i}){const a={efoId:i,index:0,size:1e3},s=Be(y,{variables:a});return d(ne,{definition:e,request:s,renderDescription:()=>d(Cn,{name:n}),renderBody:r=>{const o=[];return r.disease.phenotypes.rows.forEach(t=>t.evidence.forEach(l=>{const u=O({},t);u.evidence=l,o.push(u)})),d(Fe,{columns:Qn,rows:o,dataDownloader:!0,dataDownloaderFileStem:`${i}-phenotypes`,showGlobalFilter:!0,rowsPerPageOptions:[10,25,50,100],query:y.loc.source.body,variables:a})}})}const Bn={id:"phenotypes",name:"Clinical signs and symptoms",shortName:"CS",hasData:e=>{var n;return(((n=e.phenotypes)==null?void 0:n.count)||0)>0}};var Ln=Object.freeze(Object.defineProperty({__proto__:null,definition:Bn,Summary:$e,Body:_n},Symbol.toStringTag,{value:"Module"})),D={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"DiseaseBibliography"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"literatureOcurrences"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:82}};D.loc.source={body:`fragment DiseaseBibliography on Disease {
  literatureOcurrences {
    count
  }
}`,name:"GraphQL request",locationOffset:{line:1,column:1}};function j(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){j(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){j(a,n)}),e.definitions&&e.definitions.forEach(function(a){j(a,n)})}var J={};(function(){D.definitions.forEach(function(n){if(n.name){var i=new Set;j(n,i),J[n.name.value]=i}})})();function he(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Hn(e,n){var i={kind:e.kind,definitions:[he(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=J[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=J[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=he(e,t);l&&i.definitions.push(l)}),i}Hn(D,"DiseaseBibliography");function Te({definition:e}){const n=h(D);return d(N,{definition:e,request:n,renderSummary:i=>{var a;return((a=i.literatureOcurrences)==null?void 0:a.count)>0?f(k,{children:[i.literatureOcurrences.count.toLocaleString()," publication",i.literatureOcurrences.count===1?"":"s"]}):d(k,{children:"no data"})}})}Te.fragments={DiseaseBibliography:D};var L={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SimilarEntitiesQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ids"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},defaultValue:{kind:"ListValue",values:[]},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"threshold"}},type:{kind:"NamedType",name:{kind:"Name",value:"Float"}},defaultValue:{kind:"FloatValue",value:"0.5"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},defaultValue:{kind:"IntValue",value:"15"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"entityNames"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},defaultValue:{kind:"ListValue",values:[]},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"cursor"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},defaultValue:{kind:"NullValue"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"similarEntities"},arguments:[{kind:"Argument",name:{kind:"Name",value:"additionalIds"},value:{kind:"Variable",name:{kind:"Name",value:"ids"}}},{kind:"Argument",name:{kind:"Name",value:"threshold"},value:{kind:"Variable",name:{kind:"Name",value:"threshold"}}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"entityNames"},value:{kind:"Variable",name:{kind:"Name",value:"entityNames"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"object"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Target"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Drug"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"InlineFragment",typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"literatureOcurrences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"additionalIds"},value:{kind:"Variable",name:{kind:"Name",value:"ids"}}},{kind:"Argument",name:{kind:"Name",value:"cursor"},value:{kind:"Variable",name:{kind:"Name",value:"cursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pmid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pmcid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"publicationDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sentences"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"section"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"matches"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mappedId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"matchedLabel"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sectionStart"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sectionEnd"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startInSentence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endInSentence"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1100}};L.loc.source={body:`query SimilarEntitiesQuery(
    $id: String!
    $ids: [String!] = []
    $threshold: Float = 0.5
    $size: Int! = 15
    $entityNames: [String!] = []
    $cursor: String = null
  ) {
    disease(efoId: $id) {
      id
      name
      similarEntities(
        additionalIds: $ids
        threshold: $threshold
        size: $size
        entityNames: $entityNames
      ) {
        score
        id
        object {
          ... on Target {
            id
            approvedSymbol
          }
          ... on Drug {
            id
            name
          }
          ... on Disease {
            id
            name
          }
        }
      }
      literatureOcurrences(additionalIds: $ids, cursor: $cursor) {
        count
        cursor
        rows {
          pmid
          pmcid
          publicationDate
          sentences {
            section
            matches {
              mappedId
              matchedLabel
              sectionStart
              sectionEnd
              startInSentence
              endInSentence
            }
          }
        }
      }
    }
  }`,name:"GraphQL request",locationOffset:{line:1,column:1}};function z(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){z(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){z(a,n)}),e.definitions&&e.definitions.forEach(function(a){z(a,n)})}var Z={};(function(){L.definitions.forEach(function(n){if(n.name){var i=new Set;z(n,i),Z[n.name.value]=i}})})();function ge(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Mn(e,n){var i={kind:e.kind,definitions:[ge(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Z[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=Z[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=ge(e,t);l&&i.definitions.push(l)}),i}Mn(L,"SimilarEntitiesQuery");function Gn({definition:e,id:n,label:i}){return d(nn,{definition:e,entity:"disease",id:n,name:i,BODY_QUERY:L})}const Kn={id:"bibliography",name:"Bibliography",shortName:"B",hasData:e=>{var n;return((n=e.literatureOcurrences)==null?void 0:n.count)>0}};var Wn=Object.freeze(Object.defineProperty({__proto__:null,definition:Kn,Summary:Te,Body:Gn},Symbol.toStringTag,{value:"Module"})),x={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"OTProjectsSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"otarProjects"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"otarCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"projectName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reference"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:125}};x.loc.source={body:`fragment OTProjectsSummaryFragment on Disease {
  otarProjects {
    otarCode
    status
    projectName
    reference
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function A(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){A(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){A(a,n)}),e.definitions&&e.definitions.forEach(function(a){A(a,n)})}var ee={};(function(){x.definitions.forEach(function(n){if(n.name){var i=new Set;A(n,i),ee[n.name.value]=i}})})();function Se(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Yn(e,n){var i={kind:e.kind,definitions:[Se(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ee[n]||new Set,s=new Set,r=new Set;for(a.forEach(function(t){r.add(t)});r.size>0;){var o=r;r=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var l=ee[t]||new Set;l.forEach(function(u){r.add(u)})}})}return s.forEach(function(t){var l=Se(e,t);l&&i.definitions.push(l)}),i}Yn(x,"OTProjectsSummaryFragment");function ae({definition:e}){const n=h(x);return d(N,{definition:e,request:n,renderSummary:({otarProjects:i})=>f(k,{children:[i.length," OTAR project",i.length===1?"":"s"]})})}ae.fragments={OTProjectsSummaryFragment:x};function Un({name:e}){return f(Ne.Fragment,{children:["Active and closed projects for ",d("strong",{children:e}),". Source:"," ",d(v,{external:!0,to:"http://home.opentargets.org/",children:"Open Targets"}),"."]})}const Xn=[{id:"otarCode",label:"Project Code",renderCell:({otarCode:e})=>d(v,{external:!0,to:`http://home.opentargets.org/${e}`,children:e})},{id:"projectName",label:"Project name"}];function Jn({definition:e,label:n}){const i=h(ae.fragments.OTProjectsSummaryFragment);return d(ne,{definition:e,request:i,renderDescription:()=>d(Un,{name:n}),renderBody:({otarProjects:a})=>d(Fe,{showGlobalFilter:!0,dataDownloader:!0,columns:Xn,rows:a,rowsPerPageOptions:He,sortBy:"status"})})}const ye="otProjects",Zn={id:ye,name:"Open Targets Projects",shortName:"OP",hasData:e=>{var n;return((n=e.otarProjects)==null?void 0:n.length)>0},isPrivate:mn(ye)};var ei=Object.freeze(Object.defineProperty({__proto__:null,definition:Zn,Summary:ae,Body:Jn},Symbol.toStringTag,{value:"Module"}));const Q=[Rn,Nn,Ln,Wn,ei].filter(e=>(T.profile.hideDiseaseSectionIds.length===0||!T.profile.hideDiseaseSectionIds.includes(e.definition.id))&&(!e.definition.isPrivate||e.definition.isPrivate&&T.profile.isPartnerPreview)),ni=We(Q,"Disease"),ii=Me`
  query DiseaseProfileQuery($efoId: String!) {
    disease(efoId: $efoId) {
      id
      ...DiseaseProfileHeaderFragment
      ...DiseaseProfileSummaryFragment
    }
  }
  ${ie.fragments.profileHeader}
  ${ni}
`;function Di({efoId:e,name:n}){return d(Ye,{entity:"disease",query:ii,variables:{efoId:e},children:f(Ue,{sections:Q,children:[d(ie,{}),d(Xe,{children:Q.map(({Summary:i,definition:a})=>d(i,{id:e,label:n,definition:a},a.id))}),d(Je,{children:Q.map(({Body:i,definition:a})=>d(i,{id:e,label:n,definition:a},a.id))})]})})}export{Di as default};
