var lr=Object.defineProperty,dr=Object.defineProperties;var sr=Object.getOwnPropertyDescriptors;var $a=Object.getOwnPropertySymbols;var or=Object.prototype.hasOwnProperty,ur=Object.prototype.propertyIsEnumerable;var ii=(e,n,i)=>n in e?lr(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,Q=(e,n)=>{for(var i in n||(n={}))or.call(n,i)&&ii(e,i,n[i]);if($a)for(var i of $a(n))ur.call(n,i)&&ii(e,i,n[i]);return e},G=(e,n)=>dr(e,sr(n));var Va=(e,n,i)=>(ii(e,typeof n!="symbol"?n+"":n,i),i);import{t as Ht,r as E,m as q,j as c,a as r,ad as Da,T as k,L as m,F as H,k as cr,f as mr,b as v,ah as w,ao as _,ak as V,ai as p,au as Yn,av as Kn,bp as Ne,af as b,ag as h,aV as Ea,bq as Ke,bG as vr,aC as Ca,an as kr,bL as Ut,bx as Wt,bM as fr,bN as gr,bO as Ta,bP as pr,bA as Sr,l as Jt,bB as hr,I as br,W as Ra,aj as yr,G as Z,C as Nr,bm as Ir,n as ai,al as Fr}from"./index.ec2996a9.js";import{u as g,P as wr,k as Oa,C as xa,S as I,a as F,i as O,l as $r,o as Vr,c as Dr,b as Er,d as Cr,e as Tr,f as Rr}from"./urls.4a718162.js";import{D as Aa}from"./Description.b8e792eb.js";import{a as za,C as La}from"./CardContent.9d8c6621.js";import{a as f}from"./dataTypes.ad082e33.js";import{C as U,P,a as Yt,M as Pa,E as J,b as Or}from"./EllsWrapper.a87a0fb0.js";import{T as M,M as Kt,g as Xt,a as Zt,D as xr,d as Ar}from"./TableDrawer.dc5a9538.js";import{D as $}from"./DataTable.ed138147.js";import{L as zr}from"./ErrorBoundary.830e98b1.js";import{c as ia}from"./partnerPreviewUtils.81b319ce.js";import"./LinearProgress.9b082d1f.js";import"./graphiql.min.35449f36.js";import"./ToolbarSelect.cd37b9c4.js";import"./TablePagination.6ed57057.js";var qa=Ht(E.exports.createElement("path",{d:"M12 7c-.55 0-1 .45-1 1v3H8c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1h-3V8c0-.55-.45-1-1-1zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"})),Ba=Ht(E.exports.createElement("path",{d:"M7 12c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1zm5-10C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"}));const Lr=q(e=>({card:{height:"100%"},cardContent:{borderTop:`1px solid ${e.palette.grey[300]}`}})),Pr=e=>{const n=[];return e.forEach(i=>{i.terms.forEach(a=>{const s=n.find(l=>l.label===a);s?s.tooltip.push(i.relation):n.push({label:a,tooltip:[i.relation]})})}),n.forEach(i=>i.tooltip=i.tooltip.join(", ")),n};function qr(){var y,N,T;const e=Lr(),{loading:n,error:i,data:a}=g();if(i)return null;const{id:s,name:l,description:o}=(a==null?void 0:a.disease)||{},t=(y=a==null?void 0:a.target.functionDescriptions)==null?void 0:y[0],d=Pr((a==null?void 0:a.disease.synonyms)||[]),{id:u,approvedSymbol:S}=(a==null?void 0:a.target)||{},C=(T=(N=a==null?void 0:a.target)==null?void 0:N.synonyms)==null?void 0:T.reduce((x,A)=>(x.find(L=>L.label===A.label)||x.push(G(Q({},A),{tooltip:A.label})),x),[]);return c(wr,{children:[n?r(Da,{variant:"rect",height:"15rem"}):c(za,{className:e.card,elevation:0,children:[r(Oa,{title:r(k,{variant:"h4",children:c(m,{to:`/target/${u}`,children:[r(H,{icon:cr})," ",S]})})}),c(La,{className:e.cardContent,children:[r(Aa,{children:t}),r(xa,{title:"Synonyms",children:C})]})]}),n?r(Da,{variant:"rect",height:"15rem"}):c(za,{className:e.card,elevation:0,children:[r(Oa,{title:r(k,{variant:"h4",children:c(m,{to:`/disease/${s}`,children:[r(H,{icon:mr})," ",l]})})}),c(La,{className:e.cardContent,children:[r(Aa,{children:o}),d.length>0?r(xa,{title:"Synonyms",children:d}):null]})]})]})}var Ie={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CancerGeneCensusSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"cancerGeneCensusSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"cancer_gene_census",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:211}};Ie.loc.source={body:`fragment CancerGeneCensusSummary on Disease {
  cancerGeneCensusSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["cancer_gene_census"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Xe(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Xe(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Xe(a,n)}),e.definitions&&e.definitions.forEach(function(a){Xe(a,n)})}var li={};(function(){Ie.definitions.forEach(function(n){if(n.name){var i=new Set;Xe(n,i),li[n.name.value]=i}})})();function _a(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Br(e,n){var i={kind:e.kind,definitions:[_a(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=li[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=li[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=_a(e,t);d&&i.definitions.push(d)}),i}Br(Ie,"CancerGeneCensusSummary");function aa({definition:e}){const n=g(Ie);return r(I,{definition:e,request:n,renderSummary:({cancerGeneCensusSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.somatic_mutation})}aa.fragments={CancerGeneCensusSummary:Ie};const _r=({symbol:e,diseaseName:n})=>c(v,{children:["Catalogue of somatic mutations that causally implicate"," ",r("strong",{children:e})," in ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://cancer.sanger.ac.uk/census",external:!0,children:"COSMIC"})]});var ee={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CancerGeneCensusQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"cancer_gene_census",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"mutatedSamples"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"functionalConsequence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"numberSamplesWithMutationType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberSamplesTested"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblId"},value:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hallmarks"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attributes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pmid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:690}};ee.loc.source={body:`query CancerGeneCensusQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["cancer_gene_census"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        mutatedSamples {
          functionalConsequence {
            id
            label
          }
          numberSamplesWithMutationType
          numberSamplesTested
        }
        literature
      }
    }
  }
  target(ensemblId: $ensemblId) {
    id
    hallmarks {
      attributes {
        description
        pmid
        name
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Ze(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Ze(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Ze(a,n)}),e.definitions&&e.definitions.forEach(function(a){Ze(a,n)})}var di={};(function(){ee.definitions.forEach(function(n){if(n.name){var i=new Set;Ze(n,i),di[n.name.value]=i}})})();function Qa(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Qr(e,n){var i={kind:e.kind,definitions:[Qa(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=di[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=di[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Qa(e,t);d&&i.definitions.push(d)}),i}Qr(ee,"CancerGeneCensusQuery");const Y=e=>e.numberSamplesWithMutationType/e.numberSamplesTested*100,Ga=e=>Math.max(...e.mutatedSamples.map(n=>Y(n))),Gr=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e})=>r(m,{to:`/disease/${e.id}`,children:e.name})},{id:"mutationType",propertyPath:"mutatedSamples.functionalConsequence",label:"Mutation type",renderCell:({mutatedSamples:e})=>{if(!e)return p;const n=e.slice().sort((i,a)=>Y(a)-Y(i));return r(Yn,{style:{padding:0},children:n.map((i,a)=>r(Kn,{style:{padding:".25rem 0"},children:r(m,{external:!0,to:Ne("SO",i.functionalConsequence.id.slice(3)),children:b(i.functionalConsequence.label)})},a))})},filterValue:({mutatedSamples:e})=>(e||[]).map(n=>b(n.functionalConsequence.label)).join()},{id:"mutatedSamples",propertyPath:"mutatedSamples.numberSamplesWithMutationType",label:"Mutated / Total samples",renderCell:({mutatedSamples:e})=>{if(!e)return p;const n=e.slice().sort((i,a)=>Y(a)-Y(i));return r(Yn,{style:{padding:0},children:n.map((i,a)=>{const s=Y(i);return c(Kn,{style:{padding:".25rem 0"},children:[s<5?parseFloat(s.toFixed(2)).toString():Math.round(s),"%",c(k,{variant:"caption",style:{marginLeft:".33rem"},children:["(",i.numberSamplesWithMutationType,"/",i.numberSamplesTested,")"]})]},a)})})},comparator:(e,n)=>Ga(e)-Ga(n)},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>a==="NA"?i:[...i,{name:a,url:O(a),group:"literature"}],[]))||[];return r(P,{entries:n})}}],Mr=q({roleInCancerBox:{display:"flex",alignItems:"center",marginBottom:"2rem"},roleInCancerTitle:{marginRight:".5rem"}});function jr({definition:e,id:n,label:i}){const a=Mr(),{ensgId:s,efoId:l}=n,{data:o}=g(aa.fragments.CancerGeneCensusSummary),t={ensemblId:s,efoId:l,size:o.cancerGeneCensusSummary.count},d=w(ee,{variables:t});return r(F,{definition:e,chipText:f.somatic_mutation,request:d,renderDescription:()=>r(_r,{symbol:i.symbol,diseaseName:i.name}),renderBody:({disease:{evidences:{rows:u}},target:{hallmarks:S}})=>{const C=S&&S.attributes.length>0?S.attributes.filter(y=>y.name==="role in cancer").map(y=>({label:y.description,url:O(y.pmid)})):[{label:"Unknown"}];return c(v,{children:[c(_,{className:a.roleInCancerBox,children:[c(k,{className:a.roleInCancerTitle,children:[r("b",{children:i.symbol})," role in cancer:"]}),r(U,{items:C})]}),r($,{columns:Gr,dataDownloader:!0,order:"desc",rows:u,rowsPerPageOptions:V,showGlobalFilter:!0,sortBy:"mutatedSamples",query:ee.loc.source.body,variables:t})]})}})}const Hr={id:"cancerGeneCensus",name:"Cancer Gene Census",shortName:"CC",hasData:({cancerGeneCensusSummary:e})=>e.count>0};var Ur=Object.freeze(Object.defineProperty({__proto__:null,definition:Hr,Summary:aa,Body:jr},Symbol.toStringTag,{value:"Module"})),Fe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ChemblSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"chemblSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"chembl",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:187}};Fe.loc.source={body:`fragment ChemblSummaryFragment on Disease {
  chemblSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["chembl"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function en(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){en(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){en(a,n)}),e.definitions&&e.definitions.forEach(function(a){en(a,n)})}var si={};(function(){Fe.definitions.forEach(function(n){if(n.name){var i=new Set;en(n,i),si[n.name.value]=i}})})();function Ma(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Wr(e,n){var i={kind:e.kind,definitions:[Ma(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=si[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=si[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ma(e,t);d&&i.definitions.push(d)}),i}Wr(Fe,"ChemblSummaryFragment");function ta({definition:e}){const n=g(Fe);return r(I,{definition:e,request:n,renderSummary:({chemblSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.known_drug})}ta.fragments={ChemblSummaryFragment:Fe};function Jr({symbol:e,name:n}){return c(v,{children:["Clinical candidates and/or approved drugs pharmacologically targeting"," ",r("strong",{children:e})," and indicated for ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.ebi.ac.uk/chembl/",external:!0,children:"ChEMBL"})]})}var ne={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ChemblQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"chembl",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"drug"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"drugType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mechanismsOfAction"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mechanismOfAction"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targets"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"targetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"clinicalPhase"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"clinicalStatus"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyStartDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyStopReason"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"urls"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"niceName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:849}};ne.loc.source={body:`query ChemblQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["chembl"]
      size: $size
    ) {
      count
      rows {
        disease {
          id
          name
        }
        target {
          id
          approvedSymbol
        }
        drug {
          id
          name
          drugType
          mechanismsOfAction {
            rows {
              mechanismOfAction
              targets {
                id
                approvedSymbol
              }
            }
          }
        }
        targetFromSourceId
        clinicalPhase
        clinicalStatus
        studyStartDate
        studyStopReason
        urls {
          niceName
          url
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function nn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){nn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){nn(a,n)}),e.definitions&&e.definitions.forEach(function(a){nn(a,n)})}var oi={};(function(){ne.definitions.forEach(function(n){if(n.name){var i=new Set;nn(n,i),oi[n.name.value]=i}})})();function ja(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Yr(e,n){var i={kind:e.kind,definitions:[ja(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=oi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=oi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=ja(e,t);d&&i.definitions.push(d)}),i}Yr(ne,"ChemblQuery");const Kr=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e})=>r(m,{to:`/disease/${e.id}`,children:e.name})},{label:"Targets",renderCell:({target:e,drug:n,targetFromSourceId:i})=>{const a=n.mechanismsOfAction||{},{rows:s=[]}=a;let l="";const o=s.reduce((t,{targets:d})=>(d.forEach(({id:u,approvedSymbol:S})=>{u!==e.id?t.add(u):l=S}),t),new Set);if(l===""){const{approvedSymbol:t}=e;l=t}return c(v,{children:[r(h,{title:c(v,{children:["Reported target:"," ",r(m,{external:!0,to:`https://identifiers.org/uniprot/${i}`,children:i})]}),showHelpIcon:!0,children:r(m,{to:`/target/${e.id}`,children:l})}),o.size>0?` and ${o.size} other target${o.size>1?"s":""}`:null]})}},{id:"drug.name",label:"Drug",renderCell:({drug:e})=>r(m,{to:`/drug/${e.id}`,children:e.name})},{id:"drug.drugType",label:"Modality"},{label:"Mechanism of action (MoA)",renderCell:({target:e,drug:n})=>{const i=n.mechanismsOfAction||{},{rows:a=[]}=i;let s=null;const l=a.reduce((o,{mechanismOfAction:t,targets:d})=>{if(s===null){let u=!1;for(let S=0;S<d.length;S++)if(d[S].id===e.id){s=t,u=!0;break}u||o.add(t)}else o.add(t);return o},new Set);return`${s||p}${l.size>0?` and ${l.size} other MoA`:""}`}},{id:"clinicalPhase",label:"Phase",sortable:!0,renderCell:({clinicalPhase:e})=>Ea[e],filterValue:({clinicalPhase:e})=>Ea[e]},{id:"clinicalStatus",label:"Status",renderCell:({studyStopReason:e,clinicalStatus:n})=>n?e?r(h,{showHelpIcon:!0,title:c(v,{children:["Study stop reason: ",e]}),children:n}):r(v,{children:n}):"N/A"},{id:"studyStartDate",label:"Start Date",numeric:!0,renderCell:({studyStartDate:e})=>new Date(e).getFullYear()},{label:"Source",renderCell:({urls:e})=>{const n=e.map(({niceName:i,url:a})=>({name:Ke[i]?Ke[i]:i,url:a,group:"sources"}));return r(M,{entries:n,caption:"Sources"})},filterValue:({urls:e})=>e.map(({niceName:i})=>Ke[i]?Ke[i]:i).join()}];function Xr({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(ta.fragments.ChemblSummaryFragment),o={ensemblId:a,efoId:s,size:l.chemblSummary.count},t=w(ne,{variables:o});return r(F,{definition:e,chipText:f.known_drug,request:t,renderDescription:()=>r(Jr,{symbol:i.symbol,name:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:Kr,rows:u,rowsPerPageOptions:V,sortBy:"clinicalPhase",order:"desc",dataDownloader:!0,showGlobalFilter:!0,query:ne.loc.source.body,variables:o})}})}const Zr={id:"chembl",name:"ChEMBL",shortName:"CE",hasData:e=>e.chemblSummary.count>0};var el=Object.freeze(Object.defineProperty({__proto__:null,definition:Zr,Summary:ta,Body:Xr},Symbol.toStringTag,{value:"Module"})),we={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ClinGenSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"clingenSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"clingen",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:190}};we.loc.source={body:`fragment ClinGenSummaryFragment on Disease {
  clingenSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["clingen"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function an(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){an(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){an(a,n)}),e.definitions&&e.definitions.forEach(function(a){an(a,n)})}var ui={};(function(){we.definitions.forEach(function(n){if(n.name){var i=new Set;an(n,i),ui[n.name.value]=i}})})();function Ha(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function nl(e,n){var i={kind:e.kind,definitions:[Ha(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ui[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=ui[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ha(e,t);d&&i.definitions.push(d)}),i}nl(we,"ClinGenSummaryFragment");function ra({definition:e}){const n=g(we);return r(I,{definition:e,request:n,renderSummary:({clingenSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}ra.fragments={ClinGenSummaryFragment:we};function il({symbol:e,diseaseName:n}){return c(v,{children:["Gene-Disease Validity curation assesing the strength of the evidence supporting or refuting a claim that variation in ",r("strong",{children:e})," ","causes ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://clinicalgenome.org/curation-activities/gene-disease-validity/",external:!0,children:"Gene-Disease Validity curation"})]})}var ie={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ClingenQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"clingen",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allelicRequirements"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"urls"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:467}};ie.loc.source={body:`query ClingenQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["clingen"]
      size: $size
    ) {
      count
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        allelicRequirements
        studyId
        confidence
        urls {
          url
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function tn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){tn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){tn(a,n)}),e.definitions&&e.definitions.forEach(function(a){tn(a,n)})}var ci={};(function(){ie.definitions.forEach(function(n){if(n.name){var i=new Set;tn(n,i),ci[n.name.value]=i}})})();function Ua(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function al(e,n){var i={kind:e.kind,definitions:[Ua(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ci[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=ci[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ua(e,t);d&&i.definitions.push(d)}),i}al(ie,"ClingenQuery");const tl=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"allelicRequirements",label:"Allelic requirement",renderCell:({allelicRequirements:e})=>e?e.length===1?e[0]:r("ul",{style:{margin:0,padding:0,listStyle:"none"},children:e.map(n=>r("li",{children:n},n))}):p,filterValue:({allelicRequirements:e})=>e?e.join():""},{id:"confidence",label:"Classification",renderCell:({confidence:e,urls:n})=>{var i;return n&&((i=n[0])==null?void 0:i.url)?r(m,{external:!0,to:n[0].url,children:e}):e}}];function rl(e){const{definition:n,id:i,label:a}=e,{ensgId:s,efoId:l}=i,{data:o}=g(ra.fragments.ClinGenSummaryFragment),t={ensemblId:s,efoId:l,size:o.clingenSummary.count},d=w(ie,{variables:t});return r(F,{definition:n,chipText:f.genetic_association,request:d,renderDescription:()=>r(il,{symbol:a.symbol,diseaseName:a.name}),renderBody:({disease:u})=>{const{rows:S}=u.evidences;return r($,{columns:tl,rows:S,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,query:ie.loc.source.body,variables:t})}})}const ll={id:"clinGen",name:"ClinGen",shortName:"CG",hasData:e=>e.clingenSummary.count>0};var dl=Object.freeze(Object.defineProperty({__proto__:null,definition:ll,Summary:ra,Body:rl},Symbol.toStringTag,{value:"Module"})),$e={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"crisprSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"crisprSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"crispr",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:179}};$e.loc.source={body:`fragment crisprSummary on Disease {
  crisprSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["crispr"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function rn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){rn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){rn(a,n)}),e.definitions&&e.definitions.forEach(function(a){rn(a,n)})}var mi={};(function(){$e.definitions.forEach(function(n){if(n.name){var i=new Set;rn(n,i),mi[n.name.value]=i}})})();function Wa(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function sl(e,n){var i={kind:e.kind,definitions:[Wa(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=mi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=mi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Wa(e,t);d&&i.definitions.push(d)}),i}sl($e,"crisprSummary");function la({definition:e}){const n=g($e);return r(I,{definition:e,request:n,renderSummary:({crisprSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.affected_pathway})}la.fragments={crisprSummary:$e};const ol=({symbol:e,name:n})=>c(v,{children:["Cancer cell line dependencies identified using CRISPR-Cas9 whole genome screenings pinpointing a ",r("strong",{children:e})," dependency in"," ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://score.depmap.sanger.ac.uk",external:!0,children:"Project Score"})]});var ae={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CrisprQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"crispr",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseCellLines"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:456}};ae.loc.source={body:`query CrisprQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["crispr"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseCellLines{
          name
          id
        }
        diseaseFromSource
        resourceScore
        literature
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function ln(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){ln(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){ln(a,n)}),e.definitions&&e.definitions.forEach(function(a){ln(a,n)})}var vi={};(function(){ae.definitions.forEach(function(n){if(n.name){var i=new Set;ln(n,i),vi[n.name.value]=i}})})();function Ja(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ul(e,n){var i={kind:e.kind,definitions:[Ja(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=vi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=vi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ja(e,t);d&&i.definitions.push(d)}),i}ul(ae,"CrisprQuery");const cl=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e})=>r(Kt,{component:vr,to:`/disease/${e.id}`,children:e.name})},{label:"Reported disease/phenotype",renderCell:({diseaseCellLines:e,diseaseFromSource:n})=>{if(!e)return p;const i=e.map(a=>({name:a.name,url:`https://cellmodelpassports.sanger.ac.uk/passports/${a.id}`,group:"Cancer Cell Lines"}));return r(M,{entries:i,message:`${e.length} ${n} cell lines`})},filterValue:({diseaseFromSource:e})=>e},{id:"resourceScore",label:"Priority score",renderCell:({resourceScore:e})=>e.toFixed(3)}];function ml({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(la.fragments.crisprSummary),o={ensemblId:a,efoId:s,size:l.crisprSummary.count},t=w(ae,{variables:o});return r(F,{definition:e,chipText:f.affected_pathway,request:t,renderDescription:()=>r(ol,{symbol:i.symbol,name:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:cl,rows:u,dataDownloader:!0,showGlobalFilter:!0,query:ae.loc.source.body,variables:o})}})}const vl={id:"crispr",name:"Project Score",shortName:"PS",hasData:({crisprSummary:e})=>e.count>0};var kl=Object.freeze(Object.defineProperty({__proto__:null,definition:vl,Summary:la,Body:ml},Symbol.toStringTag,{value:"Module"})),Ve={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"EuropePmcSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"europePmc"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"europepmc",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:189}};Ve.loc.source={body:`fragment EuropePmcSummaryFragment on Disease {
  europePmc: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["europepmc"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function dn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){dn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){dn(a,n)}),e.definitions&&e.definitions.forEach(function(a){dn(a,n)})}var ki={};(function(){Ve.definitions.forEach(function(n){if(n.name){var i=new Set;dn(n,i),ki[n.name.value]=i}})})();function Ya(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function fl(e,n){var i={kind:e.kind,definitions:[Ya(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ki[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=ki[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ya(e,t);d&&i.definitions.push(d)}),i}fl(Ve,"EuropePmcSummaryFragment");function er({definition:e}){const n=g(Ve);return r(I,{definition:e,request:n,renderSummary:i=>`${i.europePmc.count} entr${i.europePmc.count===1?"y":"ies"}`,subText:f.literature})}er.fragments={EuropePmcSummaryFragment:Ve};function gl({symbol:e,name:n}){return c(v,{children:["Text-mining method evaluating the strength of the association between"," ",r("strong",{children:e})," and ",r("strong",{children:n})," when they co-occur in the literature. Source:"," ",r(m,{to:"http://europepmc.org",external:!0,children:"Europe PMC"})]})}const pl=q(e=>({matchInnerContainer:{background:`${e.palette.grey[200]}`,marginLeft:".5rem",padding:".5rem",whiteSpace:"normal"},matchOuterContainer:{alignItems:"center",display:"flex"},diseaseMark:{backgroundColor:e.palette.secondary.light},targetMark:{backgroundColor:e.palette.primary.light}}));function Sl({match:e}){const n=pl(),i=[e.dStart,e.dEnd+1,e.tStart,e.tEnd+1].sort((s,l)=>s-l),a=s=>s===e.dStart?n.diseaseMark:s===e.tStart?n.targetMark:null;return c("tr",{children:[r("td",{children:c(k,{variant:"subtitle2",children:["In: ",e.section]})}),r("td",{children:c(_,{className:n.matchInnerContainer,children:[e.text.slice(0,i[0]),r("mark",{className:a(i[0]),children:e.text.slice(i[0],i[1])}),e.text.slice(i[1],i[2]),r("mark",{className:a(i[2]),children:e.text.slice(i[2],i[3])}),e.text.slice(i[3])]})})]})}const hl="https://europepmc.org/",bl="abstract/med/";class nr extends E.exports.Component{constructor(){super(...arguments);Va(this,"render",()=>{const{pmId:n,title:i,titleHtml:a,authors:s,journal:l,variant:o}=this.props;return c(E.exports.Fragment,{children:[r(k,{variant:o==="small"?"subtitle2":"subtitle1",children:r(m,{external:!0,to:hl+bl+n,children:a?r("span",{dangerouslySetInnerHTML:{__html:a},style:{whiteSpace:"normal"}}):i})}),r(_,{style:{whiteSpace:"normal"},children:r(zr,{lineLimit:1,variant:o==="small"?"caption":"body2",children:s.map((t,d)=>t.lastName+(t.initials?" "+t.initials:"")).join(", ")})}),c(k,{variant:o==="small"?"caption":"body2",children:[l.title," ",r("span",{children:r("b",{children:l.date.substring(0,4)})})," ",r("span",{children:l.ref.volume}),c("span",{children:["(",l.ref.issue,")"]}),c("span",{children:[":",l.ref.pgn]})]})]})})}}nr.defaultProps={variant:"regular"};const yl=q(e=>({abstractSpan:{whiteSpace:"normal"},detailsButton:{margin:"1rem"},detailPanel:{background:`${e.palette.grey[100]}`,marginTop:"10px",padding:"20px"},matchTable:{width:"100%"}}));function Nl({europePmcId:e,title:n,abstract:i,textMiningSentences:a,authors:s,journal:l}){const o=yl(),[t,d]=E.exports.useState(!1),[u,S]=E.exports.useState(!1);if(!n)return r(v,{children:p});const C=()=>{d(N=>!N)},y=()=>{S(N=>!N)};return c(_,{children:[r(nr,{pmId:e,titleHtml:n,authors:s,journal:{title:l.journal.title,date:l.yearOfPublication.toString(),ref:{volume:l.volume,issue:l.issue,pgn:l.page||p}}}),i&&r(Ca,{className:o.detailsButton,variant:"outlined",size:"small",startIcon:t?r(Ba,{}):r(qa,{}),onClick:C,children:t?"Hide abstract":"Show abstract"}),a&&r(Ca,{className:o.detailsButton,variant:"outlined",size:"small",startIcon:u?r(Ba,{}):r(qa,{}),onClick:y,children:u?"Hide match details":`Show ${a.length} match details`}),t&&c(_,{className:o.detailPanel,children:[r(k,{variant:"subtitle2",children:"Abstract"}),r("span",{className:o.abstractSpan,children:i})]}),u&&c(_,{className:o.detailPanel,children:[r(k,{variant:"subtitle2",children:"Matches"}),r("table",{className:o.matchTable,children:r("tbody",{children:a.map((N,T)=>r(Sl,{match:N},T))})})]})]})}var te={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IntOgenQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"cursor"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"europepmc",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"cursor"},value:{kind:"Variable",name:{kind:"Name",value:"cursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"textMiningSentences"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"tStart"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tEnd"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dStart"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dEnd"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"section"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"text"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:643}};te.loc.source={body:`query IntOgenQuery(
  $ensemblId: String!
  $efoId: String!
  $size: Int!
  $cursor: String
) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["europepmc"]
      cursor: $cursor
    ) {
      count
      cursor
      rows {
        disease {
          name
          id
        }
        target {
          approvedSymbol
          id
        }
        literature
        textMiningSentences {
          tStart
          tEnd
          dStart
          dEnd
          section
          text
        }
        resourceScore
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function sn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){sn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){sn(a,n)}),e.definitions&&e.definitions.forEach(function(a){sn(a,n)})}var fi={};(function(){te.definitions.forEach(function(n){if(n.name){var i=new Set;sn(n,i),fi[n.name.value]=i}})})();function Ka(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Il(e,n){var i={kind:e.kind,definitions:[Ka(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=fi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=fi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ka(e,t);d&&i.definitions.push(d)}),i}Il(te,"IntOgenQuery");const Fl=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e})=>r(m,{to:`/disease/${e.id}`,children:e.name}),filterValue:({disease:e})=>e.name},{id:"publicationDetails",propertyPath:"title",label:"Publication",width:"80%",renderCell:({europePmcId:e,title:n,abstract:i,textMiningSentences:a,authors:s,journal:l})=>r(Nl,{europePmcId:e,title:n,abstract:i,textMiningSentences:a,authors:s,journal:l})},{id:"year",renderCell:({year:e})=>e||p},{id:"resourceScore",label:"Score",numeric:!0}];function wl(e,n){return e.map(a=>{var l;const s=n.find(o=>o.id===a.literature[0]);return s?G(Q({},a),{europePmcId:s.id,title:s.title,year:s.pubYear,abstract:s.abstractText,authors:((l=s.authorList)==null?void 0:l.author)||[],journal:G(Q({},s.journalInfo),{page:s.pageInfo})}):a})}function $l({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const[o,t]=E.exports.useState(0),[d,u]=E.exports.useState(5),[S,C]=E.exports.useState([]),[y,N]=E.exports.useState([]),T={ensemblId:n,efoId:i,size:d*10},{loading:x,error:A,data:L,fetchMore:Je,refetch:ni}=w(te,{variables:T,onCompleted:D=>{N(D.disease.evidences.rows.map(R=>R.literature[0]))}}),[Ye,X]=E.exports.useState(x),z=D=>{D*d>=L.disease.evidences.rows.length-d&&(D+1)*d<L.disease.evidences.count&&(X(!0),Je({variables:G(Q({},T),{cursor:L.disease.evidences.cursor}),updateQuery:(R,{fetchMoreResult:W})=>W?(N(W.disease.evidences.rows.map(wa=>wa.literature[0])),G(Q({},R),{disease:G(Q({},R.disease),{evidences:G(Q({},R.disease.evidences),{cursor:W.disease.evidences.cursor,rows:[...R.disease.evidences.rows,...W.disease.evidences.rows]})})})):R})),t(D)},j=D=>{o*D>=L.disease.evidences.rows.length-D&&ni(T),t(0),u(D)};return E.exports.useEffect(()=>{let D=!0;async function R(){if(X(!0),y.length){const W=$r(y),tr=(await(await fetch(W)).json()).resultList.result;C(rr=>[...rr,...tr]),X(!1)}}return D&&R(),()=>{D=!1}},[y]),r(F,{definition:e,chipText:f.literature,request:{loading:Ye,error:A,data:L},renderDescription:()=>r(gl,{symbol:a,name:s}),renderBody:D=>{const R=wl(Xt(D.disease.evidences.rows,o,d),S);return r(Zt,{loading:Ye,columns:Fl,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,onPageChange:z,onRowsPerPageChange:j,page:o,pageSize:d,rows:R,rowCount:D.disease.evidences.count,rowsPerPageOptions:[5,10,15,20,25],query:te.loc.source.body,variables:T})}})}const Vl={id:"europePmc",name:"Europe PMC",shortName:"EP",hasData:e=>e.europePmc.count>0};var Dl=Object.freeze(Object.defineProperty({__proto__:null,definition:Vl,Summary:er,Body:$l},Symbol.toStringTag,{value:"Module"})),De={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"evaSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"evaSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"eva",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:170}};De.loc.source={body:`fragment evaSummary on Disease {
  evaSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["eva"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function on(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){on(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){on(a,n)}),e.definitions&&e.definitions.forEach(function(a){on(a,n)})}var gi={};(function(){De.definitions.forEach(function(n){if(n.name){var i=new Set;on(n,i),gi[n.name.value]=i}})})();function Xa(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function El(e,n){var i={kind:e.kind,definitions:[Xa(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=gi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=gi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Xa(e,t);d&&i.definitions.push(d)}),i}El(De,"evaSummary");function da({definition:e}){const n=g(De);return r(I,{definition:e,request:n,renderSummary:({evaSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}da.fragments={evaSummary:De};const Cl=({symbol:e,name:n})=>c(v,{children:["Germline variation associated with ",r("strong",{children:e})," on patients affected by ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.ebi.ac.uk/eva/",external:!0,children:"EVA"})]});var Ee={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ClinvarQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"cursor"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"eva",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"cursor"},value:{kind:"Variable",name:{kind:"Name",value:"cursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantRsId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantFunctionalConsequence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"clinicalSignificances"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allelicRequirements"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alleleOrigins"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortPhenotypes"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:683}};Ee.loc.source={body:`query ClinvarQuery(
  $ensemblId: String!
  $efoId: String!
  $size: Int!
  $cursor: String
) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["eva"]
      size: $size
      cursor: $cursor
    ) {
      cursor
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        variantId
        variantRsId
        studyId
        variantFunctionalConsequence {
          id
          label
        }
        clinicalSignificances
        allelicRequirements
        alleleOrigins
        confidence
        literature
        cohortPhenotypes
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function un(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){un(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){un(a,n)}),e.definitions&&e.definitions.forEach(function(a){un(a,n)})}var pi={};(function(){Ee.definitions.forEach(function(n){if(n.name){var i=new Set;un(n,i),pi[n.name.value]=i}})})();function Za(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Tl(e,n){var i={kind:e.kind,definitions:[Za(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=pi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=pi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Za(e,t);d&&i.definitions.push(d)}),i}Tl(Ee,"ClinvarQuery");const et=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n,cohortPhenotypes:i})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",gutterBottom:!0,children:n}),(i==null?void 0:i.length)>1?c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"All reported phenotypes:"}),r(k,{variant:"caption",display:"block",children:i.map(a=>r("div",{children:a},a))})]}):""]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"variantRsId",label:"Variant ID (RSID)",renderCell:({variantId:e,variantRsId:n})=>e?c(v,{children:[e.substring(0,20),e.length>20?"\u2026":"",n?c(v,{children:[" ","(",r(m,{external:!0,to:`http://www.ensembl.org/Homo_sapiens/Variation/Explore?v=${n}`,children:n}),")"]}):""]}):p,filterValue:({variantId:e,variantRsId:n})=>`${e} ${n}`},{id:"studyId",label:"ClinVar ID",renderCell:({studyId:e})=>e?r(m,{external:!0,to:`https://www.ncbi.nlm.nih.gov/clinvar/${e}`,children:e}):p},{label:"Functional consequence",renderCell:({variantFunctionalConsequence:e})=>r(m,{external:!0,to:`http://www.sequenceontology.org/browser/current_svn/term/${e.id}`,children:b(e.label)}),filterValue:({variantFunctionalConsequence:e})=>b(e.label)},{id:"clinicalSignificances",filterValue:({clinicalSignificances:e})=>e.join(),label:"Clinical significance",renderCell:({clinicalSignificances:e})=>e?e.length===1?b(e[0]):r("ul",{style:{margin:0,padding:0,listStyle:"none"},children:e.map(n=>r("li",{children:b(n)},n))}):p},{id:"allelicRequirements",label:"Allele origin",renderCell:({alleleOrigins:e,allelicRequirements:n})=>!e||e.length===0?p:n?r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Allelic requirements:"}),n.map(i=>r(k,{variant:"caption",children:i},i))]}),showHelpIcon:!0,children:e.map(i=>b(i)).join("; ")}):e.map(i=>b(i)).join("; "),filterValue:({alleleOrigins:e})=>e?e.join():""},{id:"confidence",label:"Review status",renderCell:({confidence:e})=>r(h,{title:e,children:r("span",{children:r(Yt,{num:Ut[e]})})})},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}];function ti(e,n,i,a){return kr.query({query:Ee,variables:{ensemblId:e,efoId:n,cursor:i,size:a}})}function Rl({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(da.fragments.evaSummary),o=l.evaSummary.count,[t,d]=E.exports.useState(!0),[u,S]=E.exports.useState(!1),[C,y]=E.exports.useState(""),[N,T]=E.exports.useState([]),[x,A]=E.exports.useState(0),[L,Je]=E.exports.useState(10),ni={ensemblId:a,efoId:s,size:o>1e3?100:o};E.exports.useEffect(()=>{let z=!0;return ti(a,s,"",o>1e3?100:o).then(j=>{const{cursor:D,rows:R}=j.data.disease.evidences;z&&(d(!1),y(D),T(R))}),()=>{z=!1}},[a,s,o]);function Ye(z){L*z+L>N.length&&C!==null?(S(!0),ti(a,s,C,100).then(j=>{const{cursor:D,rows:R}=j.data.disease.evidences;S(!1),y(D),A(z),T([...N,...R])})):A(z)}function X(z){z>N.length&&C!==null?(S(!0),ti(a,s,C,100).then(j=>{const{cursor:D,rows:R}=j.data.disease.evidences;S(!1),y(D),A(0),Je(z),T([...N,...R])})):(A(0),Je(z))}return r(F,{definition:e,chipText:f.genetic_association,request:{loading:t,data:N},renderDescription:()=>r(Cl,{symbol:i.symbol,name:i.name}),renderBody:()=>o>1e3?r(Zt,{loading:u,columns:et,rows:Xt(N,x,L),rowCount:o,page:x,rowsPerPageOptions:V,onPageChange:Ye,onRowsPerPageChange:X}):r($,{showGlobalFilter:!0,columns:et,rows:N,dataDownloader:!0,rowsPerPageOptions:V,query:Ee.loc.source.body,variables:ni})})}const Ol={id:"eva",name:"ClinVar",shortName:"CV",hasData:({evaSummary:e})=>e.count>0};var xl=Object.freeze(Object.defineProperty({__proto__:null,definition:Ol,Summary:da,Body:Rl},Symbol.toStringTag,{value:"Module"})),Ce={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"evaSomaticSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"evaSomaticSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"eva_somatic",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:192}};Ce.loc.source={body:`fragment evaSomaticSummary on Disease {
  evaSomaticSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["eva_somatic"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function cn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){cn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){cn(a,n)}),e.definitions&&e.definitions.forEach(function(a){cn(a,n)})}var Si={};(function(){Ce.definitions.forEach(function(n){if(n.name){var i=new Set;cn(n,i),Si[n.name.value]=i}})})();function nt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Al(e,n){var i={kind:e.kind,definitions:[nt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Si[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Si[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=nt(e,t);d&&i.definitions.push(d)}),i}Al(Ce,"evaSomaticSummary");function sa({definition:e}){const n=g(Ce);return r(I,{definition:e,request:n,renderSummary:({evaSomaticSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.somatic_mutation})}sa.fragments={evaSomaticSummary:Ce};const zl=({symbol:e,name:n})=>c(v,{children:["Somatic variation associated with ",r("strong",{children:e})," on patients affected by ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.ebi.ac.uk/eva/",external:!0,children:"EVA"})]});var re={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"EvaSomaticQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"eva_somatic",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantRsId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"clinicalSignificances"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allelicRequirements"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alleleOrigins"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortPhenotypes"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblId"},value:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hallmarks"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attributes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pmid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:697}};re.loc.source={body:`query EvaSomaticQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["eva_somatic"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        variantId
        variantRsId
        studyId
        clinicalSignificances
        allelicRequirements
        alleleOrigins
        confidence
        literature
        cohortPhenotypes
      }
    }
  }
  target(ensemblId: $ensemblId) {
    id
    hallmarks {
      attributes {
        description
        pmid
        name
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function mn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){mn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){mn(a,n)}),e.definitions&&e.definitions.forEach(function(a){mn(a,n)})}var hi={};(function(){re.definitions.forEach(function(n){if(n.name){var i=new Set;mn(n,i),hi[n.name.value]=i}})})();function it(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Ll(e,n){var i={kind:e.kind,definitions:[it(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=hi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=hi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=it(e,t);d&&i.definitions.push(d)}),i}Ll(re,"EvaSomaticQuery");const Pl=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n,cohortPhenotypes:i})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",gutterBottom:!0,children:n}),(i==null?void 0:i.length)>1?c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"All reported phenotypes:"}),r(k,{variant:"caption",display:"block",children:i.map(a=>r("div",{children:a},a))})]}):""]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"variantRsId",label:"Variant ID (RSID)",renderCell:({variantId:e,variantRsId:n})=>e?c(v,{children:[e.substring(0,20),e.length>20?"\u2026":"",n?c(v,{children:[" ","(",r(m,{external:!0,to:`http://www.ensembl.org/Homo_sapiens/Variation/Explore?v=${n}`,children:n}),")"]}):""]}):p,filterValue:({variantId:e,variantRsId:n})=>`${e} ${n}`},{id:"studyId",label:"ClinVar ID",renderCell:({studyId:e})=>r(m,{external:!0,to:`https://identifiers.org/clinvar.record/${e}`,children:e})},{id:"clinicalSignificances",label:"Clinical significance",renderCell:({clinicalSignificances:e})=>e?e.length===1?b(e[0]):r("ul",{style:{margin:0,padding:0,listStyle:"none"},children:e.map(n=>r("li",{children:b(n)},n))}):p,filterValue:({clinicalSignificances:e})=>e.join()},{id:"allelicRequirements",label:"Allele origin",renderCell:({alleleOrigins:e,allelicRequirements:n})=>!e||e.length===0?p:n?r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Allelic requirements:"}),n.map(i=>r(k,{variant:"caption",children:i},i))]}),showHelpIcon:!0,children:e.map(i=>b(i)).join("; ")}):e.map(i=>b(i)).join("; "),filterValue:({alleleOrigins:e})=>e?e.join():""},{label:"Review status",renderCell:({confidence:e})=>r(h,{title:e,children:r("span",{children:r(Yt,{num:Ut[e]})})})},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}],ql=q({roleInCancerBox:{display:"flex",alignItems:"center",marginBottom:"2rem"},roleInCancerTitle:{marginRight:".5rem"}});function Bl({definition:e,id:n,label:i}){const a=ql(),{ensgId:s,efoId:l}=n,{data:o}=g(sa.fragments.evaSomaticSummary),t={ensemblId:s,efoId:l,size:o.evaSomaticSummary.count},d=w(re,{variables:t});return r(F,{definition:e,chipText:f.somatic_mutation,request:d,renderDescription:()=>r(zl,{symbol:i.symbol,name:i.name}),renderBody:({disease:u,target:{hallmarks:S}})=>{const{rows:C}=u.evidences,y=S&&S.attributes.length>0?S.attributes.filter(N=>N.name==="role in cancer").map(N=>({label:N.description,url:O(N.pmid)})):[{label:"Unknown"}];return c(v,{children:[c(_,{className:a.roleInCancerBox,children:[c(k,{className:a.roleInCancerTitle,children:[r("b",{children:i.symbol})," role in cancer:"]}),r(U,{items:y})]}),r($,{columns:Pl,rows:C,dataDownloader:!0,showGlobalFilter:!0,sortBy:"score",order:"desc",rowsPerPageOptions:V,query:re.loc.source.body,variables:t})]})}})}const _l={id:"evaSomatic",name:"ClinVar (somatic)",shortName:"CS",hasData:({evaSomaticSummary:e})=>e.count>0};var Ql=Object.freeze(Object.defineProperty({__proto__:null,definition:_l,Summary:sa,Body:Bl},Symbol.toStringTag,{value:"Module"})),Te={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"expressionAtlasSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"expressionAtlasSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"expression_atlas",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:207}};Te.loc.source={body:`fragment expressionAtlasSummary on Disease {
  expressionAtlasSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["expression_atlas"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function vn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){vn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){vn(a,n)}),e.definitions&&e.definitions.forEach(function(a){vn(a,n)})}var bi={};(function(){Te.definitions.forEach(function(n){if(n.name){var i=new Set;vn(n,i),bi[n.name.value]=i}})})();function at(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Gl(e,n){var i={kind:e.kind,definitions:[at(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=bi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=bi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=at(e,t);d&&i.definitions.push(d)}),i}Gl(Te,"expressionAtlasSummary");function oa({definition:e}){const n=g(Te);return r(I,{definition:e,request:n,renderSummary:({expressionAtlasSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.rna_expression})}oa.fragments={expressionAtlasSummary:Te};function K({number:e}){if(!e)return null;let n,i;return Array.isArray(e)?[n,i]=e:([n,i]=e.toExponential().split("e"),i=i.charAt(0)==="+"?i.slice(1):i),n=parseFloat(parseFloat(n).toFixed(Wt)),c(v,{children:[n,i&&r(v,{children:"\xD710"}),i&&r("sup",{children:i})]})}const Ml=({symbol:e,name:n})=>c(v,{children:["Transcriptomic analysis reporting a significant differential expression of"," ",r("strong",{children:e})," when comparing control samples with"," ",r("strong",{children:n})," samples. Source:"," ",r(m,{to:"https://www.ebi.ac.uk/gxa/home",external:!0,children:"Expression Atlas"})]});var le={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ExpressionAtlasQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"expression_atlas",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contrast"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyOverview"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"log2FoldChangeValue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"log2FoldChangePercentileRank"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:531}};le.loc.source={body:`query ExpressionAtlasQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["expression_atlas"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        contrast
        confidence
        studyOverview
        log2FoldChangeValue
        resourceScore
        log2FoldChangePercentileRank
        studyId
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function kn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){kn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){kn(a,n)}),e.definitions&&e.definitions.forEach(function(a){kn(a,n)})}var yi={};(function(){le.definitions.forEach(function(n){if(n.name){var i=new Set;kn(n,i),yi[n.name.value]=i}})})();function tt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function jl(e,n){var i={kind:e.kind,definitions:[tt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=yi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=yi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=tt(e,t);d&&i.definitions.push(d)}),i}jl(le,"ExpressionAtlasQuery");const Hl=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"studyId",label:"Experiment ID",renderCell:({studyId:e})=>r(m,{external:!0,to:`http://www.ebi.ac.uk/gxa/experiments/${e}`,children:e})},{id:"contrast",label:"Experiment details",renderCell:({contrast:e,studyOverview:n})=>r(h,{title:n,showHelpIcon:!0,children:r("span",{children:e})})},{id:"confidence",label:"Experiment confidence",renderCell:({confidence:e})=>r(v,{children:b(e)})},{id:"log2FoldChangeValue",label:c(v,{children:["Log",r("sub",{children:"2"})," fold change"]}),numeric:!0,sortable:!0},{id:"log2FoldChangePercentileRank",label:"Percentile",numeric:!0,sortable:!0},{id:"resourceScore",label:c(v,{children:[r("i",{children:"p"}),"-value"]}),renderCell:({resourceScore:e})=>r(K,{number:e}),numeric:!0,sortable:!0}];function Ul({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(oa.fragments.expressionAtlasSummary),o={ensemblId:a,efoId:s,size:l.expressionAtlasSummary.count},t=w(le,{variables:o});return r(F,{definition:e,chipText:f.rna_expression,request:t,renderDescription:()=>r(Ml,{symbol:i.symbol,name:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:Hl,rows:u,dataDownloader:!0,showGlobalFilter:!0,sortBy:"resourceScore",order:"asc",query:le.loc.source.body,variables:o})}})}const Wl={id:"expression",name:"Expression Atlas",shortName:"EA",hasData:({expressionAtlasSummary:e})=>e.count>0};var Jl=Object.freeze(Object.defineProperty({__proto__:null,definition:Wl,Summary:oa,Body:Ul},Symbol.toStringTag,{value:"Module"})),Re={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"Gene2PhenotypeSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"gene2Phenotype"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"gene2phenotype",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:204}};Re.loc.source={body:`fragment Gene2PhenotypeSummaryFragment on Disease {
  gene2Phenotype: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["gene2phenotype"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function fn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){fn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){fn(a,n)}),e.definitions&&e.definitions.forEach(function(a){fn(a,n)})}var Ni={};(function(){Re.definitions.forEach(function(n){if(n.name){var i=new Set;fn(n,i),Ni[n.name.value]=i}})})();function rt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Yl(e,n){var i={kind:e.kind,definitions:[rt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ni[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ni[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=rt(e,t);d&&i.definitions.push(d)}),i}Yl(Re,"Gene2PhenotypeSummaryFragment");function ir({definition:e}){const n=g(Re);return r(I,{definition:e,request:n,renderSummary:i=>`${i.gene2Phenotype.count} entr${i.gene2Phenotype.count===1?"y":"ies"}`,subText:f.genetic_association})}ir.fragments={Gene2PhenotypeSummaryFragment:Re};function Kl({symbol:e,name:n}){return c(v,{children:["Supporting diagnostic evidence associating ",r("strong",{children:e})," with"," ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.ebi.ac.uk/gene2phenotype",external:!0,children:"Gene2Phenotype"})]})}var de={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"OpenTargetsGeneticsQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"gene2phenotype",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allelicRequirements"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:467}};de.loc.source={body:`query OpenTargetsGeneticsQuery($ensemblId: String!, $efoId: String!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["gene2phenotype"]
    ) {
      rows {
        id
        disease {
          id
          name
        }
        diseaseFromSource
        allelicRequirements
        confidence
        studyId
        target {
          approvedSymbol
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function gn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){gn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){gn(a,n)}),e.definitions&&e.definitions.forEach(function(a){gn(a,n)})}var Ii={};(function(){de.definitions.forEach(function(n){if(n.name){var i=new Set;gn(n,i),Ii[n.name.value]=i}})})();function lt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Xl(e,n){var i={kind:e.kind,definitions:[lt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ii[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ii[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=lt(e,t);d&&i.definitions.push(d)}),i}Xl(de,"OpenTargetsGeneticsQuery");const Zl=(e,n)=>`https://www.ebi.ac.uk/gene2phenotype/search?panel=${e}&search_term=${n}`,ed=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:b(n)})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"allelicRequirements",label:"Allelic requirement",renderCell:({allelicRequirements:e})=>e?e.length>1?r(Yn,{children:e.map(n=>r(Kn,{children:n}))}):b(e[0]):p,filterValue:({allelicRequirements:e})=>e.join()},{id:"studyId",label:"Panel",renderCell:({studyId:e,target:{approvedSymbol:n}})=>r(m,{external:!0,to:Zl(e,n),children:e})},{id:"confidence",label:"Confidence category",renderCell:({confidence:e})=>b(e)||p},{id:"literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>a==="NA"?i:[...i,{name:a,url:O(a),group:"literature"}],[]))||[];return r(M,{entries:n})}}];function nd({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const l={ensemblId:n,efoId:i},o=w(de,{variables:l});return r(F,{definition:e,chipText:f.genetic_association,request:o,renderDescription:()=>r(Kl,{symbol:a,name:s}),renderBody:t=>r($,{columns:ed,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,rows:t.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,query:de.loc.source.body,variables:l})})}const id={id:"gene2Phenotype",name:"Gene2Phenotype",shortName:"GP",hasData:e=>e.gene2Phenotype.count>0};var ad=Object.freeze(Object.defineProperty({__proto__:null,definition:id,Summary:ir,Body:nd},Symbol.toStringTag,{value:"Module"})),Oe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"GenomicsEnglandSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"genomicsEngland"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"genomics_england",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:208}};Oe.loc.source={body:`fragment GenomicsEnglandSummaryFragment on Disease {
  genomicsEngland: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["genomics_england"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function pn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){pn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){pn(a,n)}),e.definitions&&e.definitions.forEach(function(a){pn(a,n)})}var Fi={};(function(){Oe.definitions.forEach(function(n){if(n.name){var i=new Set;pn(n,i),Fi[n.name.value]=i}})})();function dt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function td(e,n){var i={kind:e.kind,definitions:[dt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Fi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Fi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=dt(e,t);d&&i.definitions.push(d)}),i}td(Oe,"GenomicsEnglandSummaryFragment");function ua({definition:e}){const n=g(Oe);return r(I,{definition:e,request:n,renderSummary:i=>`${i.genomicsEngland.count} entr${i.genomicsEngland.count===1?"y":"ies"}`,subText:f.genetic_association})}ua.fragments={GenomicsEnglandSummaryFragment:Oe};function rd({symbol:e,name:n}){return c(v,{children:["Crowdsourced expert knowledge establishing consensus causation evidence associating ",r("strong",{children:e})," with ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://panelapp.genomicsengland.co.uk",external:!0,children:"Genomics England PanelApp"})]})}var se={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GenomicsEnglandQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"genomics_england",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortPhenotypes"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"allelicRequirements"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyOverview"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:539}};se.loc.source={body:`query GenomicsEnglandQuery($ensemblId: String!, $efoId: String!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["genomics_england"]
    ) {
      rows {
        disease {
          id
          name
        }
        target {
          approvedSymbol
        }
        diseaseFromSource
        cohortPhenotypes
        confidence
        allelicRequirements
        studyOverview
        studyId
        confidence
        literature
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Sn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Sn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Sn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Sn(a,n)})}var wi={};(function(){se.definitions.forEach(function(n){if(n.name){var i=new Set;Sn(n,i),wi[n.name.value]=i}})})();function st(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ld(e,n){var i={kind:e.kind,definitions:[st(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=wi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=wi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=st(e,t);d&&i.definitions.push(d)}),i}ld(se,"GenomicsEnglandQuery");const dd=(e,n)=>`https://panelapp.genomicsengland.co.uk/panels/${e}/gene/${n}`,sd=e=>({green:c("span",{style:{color:"#3fad46"},children:[r(H,{icon:fr,size:"sm"})," ",b(e)]}),amber:c("span",{style:{color:"#f0ad4e"},children:[r(H,{icon:gr,size:"sm"})," ",b(e)]})})[e],ot=e=>({green:20,amber:10})[e.toLowerCase()]||0,od=e=>{const n=b(e.split(" ",1)[0].replace(/[;:,]*/g,"")),i=e.split(" ").slice(1).join(" ")||"No more information available";return[n,i]},ud=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n,cohortPhenotypes:i})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",gutterBottom:!0,children:b(n)}),(i==null?void 0:i.length)>1?c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"All reported phenotypes:"}),r(k,{variant:"caption",display:"block",children:i.map(a=>r("div",{children:a},a))})]}):""]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>[e.name,n].join()},{id:"allelicRequirements",label:"Allelic Requirement",renderCell:({allelicRequirements:e})=>e?e.map((n,i)=>{const[a,s]=od(n);return r(h,{placement:"top",interactive:!0,title:s,showHelpIcon:!0,children:a},i)}):p},{id:"studyOverview",label:"Genomics England Panel",renderCell:({studyOverview:e,studyId:n,target:{approvedSymbol:i}})=>e&&n&&i?r(m,{external:!0,to:dd(n,i),children:e}):p},{id:"confidence",label:"Gene rating",sortable:!0,renderCell:({confidence:e})=>sd(e),comparator:(e,n)=>ot(e.confidence)-ot(n.confidence)},{id:"literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>a==="NA"?i:[...i,{name:a,url:O(a),group:"literature"}],[]))||[];return r(P,{entries:n})}}];function cd({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{genomicsEngland:{count:l}}}=g(ua.fragments.GenomicsEnglandSummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(se,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(rd,{symbol:a,name:s}),renderBody:d=>r($,{columns:ud,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,order:"desc",rows:d.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,sortBy:"confidence",query:se.loc.source.body,variables:o})})}const md={id:"genomicsEngland",name:"GEL PanelApp",shortName:"GE",hasData:e=>e.genomicsEngland.count>0};var vd=Object.freeze(Object.defineProperty({__proto__:null,definition:md,Summary:ua,Body:cd},Symbol.toStringTag,{value:"Module"})),xe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"IntOgenSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"intOgen"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"intogen",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:183}};xe.loc.source={body:`fragment IntOgenSummaryFragment on Disease {
  intOgen: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["intogen"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function hn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){hn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){hn(a,n)}),e.definitions&&e.definitions.forEach(function(a){hn(a,n)})}var $i={};(function(){xe.definitions.forEach(function(n){if(n.name){var i=new Set;hn(n,i),$i[n.name.value]=i}})})();function ut(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function kd(e,n){var i={kind:e.kind,definitions:[ut(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=$i[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=$i[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=ut(e,t);d&&i.definitions.push(d)}),i}kd(xe,"IntOgenSummaryFragment");function ca({definition:e}){const n=g(xe);return r(I,{definition:e,request:n,renderSummary:i=>`${i.intOgen.count} entr${i.intOgen.count===1?"y":"ies"}`,subText:f.somatic_mutation})}ca.fragments={IntOgenSummaryFragment:xe};function fd({symbol:e,name:n}){return c(v,{children:["Integrative analysis of large-scale mutation data pinpointing"," ",r("strong",{children:e})," as driver gene in ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.intogen.org/search",external:!0,children:"IntOGen"})]})}const ct={columnTooltip:{description:"The current version of the intOGen pipeline uses seven methods to identify cancer driver genes from somatic point mutations - HotMAPS, dNDScv, smRegions, CBaSE, FML, MutPanning, and CLUSTL. The pipeline also uses a combination of methods. For further information on the methods, please click here visit the intOGen FAQ.",url:"https://www.intogen.org/faq"},hotmaps:{id:"HotMAPS",description:"Somatic mutations in the gene are significantly clustered according to HotMAPS"},oncodriveclustl:{id:"ClustL",description:"Somatic mutations in the gene are significantly clustered according to OncodriveCLUSTL"},smregions:{id:"smRegions",description:"Somatic mutations in the gene are significantly clustered according to smRegions"},cbase:{id:"CBaSE",description:"Genes more mutated than the background neutral mutation rate according to CBaSE"},dndscv:{id:"dNdScv",description:"Genes more mutated than the background neutral mutation rate according to dNdScv"},oncodrivefml:{id:"FML",description:"Somatic mutations in the gene show a functional impact bias according to OncodriveFML"},combination:{id:"combination",description:"The combination reports this gene as significant"},mutpanning:{id:"MutPanning",description:"MutPanning is designed to detect rare cancer driver genes from aggregated whole-exome sequencing data"}};var oe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IntOgenQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"intogen",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"mutatedSamples"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"functionalConsequence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"numberSamplesTested"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberMutatedSamples"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"significantDriverMethods"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortShortName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cohortDescription"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblId"},value:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hallmarks"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attributes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pmid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:842}};oe.loc.source={body:`query IntOgenQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["intogen"]
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        target {
          approvedSymbol
        }
        mutatedSamples {
          functionalConsequence {
            id
            label
          }
          numberSamplesTested
          numberMutatedSamples
        }
        resourceScore
        significantDriverMethods
        cohortId
        cohortShortName
        cohortDescription
      }
    }
  }
  target(ensemblId: $ensemblId) {
    id
    hallmarks {
      attributes {
        description
        pmid
        name
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function bn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){bn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){bn(a,n)}),e.definitions&&e.definitions.forEach(function(a){bn(a,n)})}var Vi={};(function(){oe.definitions.forEach(function(n){if(n.name){var i=new Set;bn(n,i),Vi[n.name.value]=i}})})();function mt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function gd(e,n){var i={kind:e.kind,definitions:[mt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Vi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Vi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=mt(e,t);d&&i.definitions.push(d)}),i}gd(oe,"IntOgenQuery");const pd=(e,n)=>`https://www.intogen.org/search?gene=${n}&cohort=${e}`,ri=e=>e.numberMutatedSamples/e.numberSamplesTested*100,Sd=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:b(n)})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>[e.name,n].join()},{id:"mutatedSamples",propertyPath:"mutatedSamples.numberMutatedSamples",label:"Mutated / Total samples",renderCell:({mutatedSamples:e})=>r(Yn,{style:{padding:0},children:e.sort((n,i)=>ri(i)-ri(n)).map((n,i)=>{const a=ri(n);return c(Kn,{style:{padding:".25rem 0"},children:[a<5?parseFloat(a.toFixed(2)).toString():Math.round(a),"%",c(k,{variant:"caption",style:{marginLeft:".33rem"},children:["(",n.numberMutatedSamples,"/",n.numberSamplesTested,")"]})]},i)})})},{id:"resourceScore",label:c("span",{children:["Combined ",r("i",{children:"p"}),"-value"]}),tooltip:c(v,{children:["Visit the"," ",r(m,{external:!0,to:"https://www.intogen.org/faq",children:"IntOGen FAQ"})," ","for more information."]}),numeric:!0,sortable:!0,renderCell:({resourceScore:e})=>r(K,{number:e})},{id:"significantDriverMethods",label:"Cancer driver methods",tooltip:c(v,{children:["The current version of the intOGen pipeline uses seven methods to identify cancer driver genes from somatic point mutations - HotMAPS, dNDScv, smRegions, CBaSE, FML, MutPanning, and CLUSTL. The pipeline also uses a combination of methods. For further information on the methods, please"," ",r(m,{to:ct.columnTooltip.url,external:!0,children:"click here"})," ","visit the intOGen FAQ."]}),renderCell:({significantDriverMethods:e})=>e?r(U,{items:e.map((n,i)=>({label:n,tooltip:(ct[n]||{}).description}))}):p,filterValue:({significantDriverMethods:e})=>e.map(n=>n).join()},{id:"cohortShortName",label:"Cohort Information",renderCell:({cohortId:e,cohortShortName:n,cohortDescription:i,target:{approvedSymbol:a}})=>n&&i?c(v,{children:[r(m,{external:!0,to:pd(e,a),children:n})," ",i]}):p,filterValue:({cohortShortName:e,cohortDescription:n})=>`${e} ${n}`}],hd=q({roleInCancerBox:{display:"flex",alignItems:"center",marginBottom:"2rem"},roleInCancerTitle:{marginRight:".5rem"}});function bd({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const l=hd(),{data:{intOgen:{count:o}}}=g(ca.fragments.IntOgenSummaryFragment),t={ensemblId:n,efoId:i,size:o},d=w(oe,{variables:t});return r(F,{definition:e,chipText:f.somatic_mutation,request:d,renderDescription:()=>r(fd,{symbol:a,name:s}),renderBody:({disease:{evidences:{rows:u}},target:{hallmarks:S}})=>{const C=S&&S.attributes.length>0?S.attributes.filter(y=>y.name==="role in cancer").map(y=>({label:y.description,url:O(y.pmid)})):[{label:"Unknown"}];return c(v,{children:[c(_,{className:l.roleInCancerBox,children:[c(k,{className:l.roleInCancerTitle,children:[r("b",{children:a})," role in cancer:"]}),r(U,{items:C})]}),r($,{columns:Sd,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,order:"asc",rows:u,sortBy:"resourceScore",pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,query:oe.loc.source.body,variables:t})]})}})}const yd={id:"intOgen",name:"IntOGen",shortName:"IO",hasData:e=>e.intOgen.count>0};var Nd=Object.freeze(Object.defineProperty({__proto__:null,definition:yd,Summary:ca,Body:bd},Symbol.toStringTag,{value:"Module"})),Ae={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"OpenTargetsGeneticsSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"openTargetsGenetics"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_genetics_portal",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:218}};Ae.loc.source={body:`fragment OpenTargetsGeneticsSummaryFragment on Disease {
  openTargetsGenetics: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["ot_genetics_portal"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function yn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){yn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){yn(a,n)}),e.definitions&&e.definitions.forEach(function(a){yn(a,n)})}var Di={};(function(){Ae.definitions.forEach(function(n){if(n.name){var i=new Set;yn(n,i),Di[n.name.value]=i}})})();function vt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Id(e,n){var i={kind:e.kind,definitions:[vt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Di[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Di[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=vt(e,t);d&&i.definitions.push(d)}),i}Id(Ae,"OpenTargetsGeneticsSummaryFragment");function ma({definition:e}){const n=g(Ae);return r(I,{definition:e,request:n,renderSummary:i=>`${i.openTargetsGenetics.count} entr${i.openTargetsGenetics.count===1?"y":"ies"}`,subText:f.genetic_association})}ma.fragments={OpenTargetsGeneticsSummaryFragment:Ae};function Fd({symbol:e,name:n}){return c(v,{children:["Genome-wide associated loci prioritisating ",r("strong",{children:e})," as likely causal gene for ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://genetics.opentargets.org",external:!0,children:"Open Targets Genetics Portal"})]})}var ue={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"OpenTargetsGeneticsQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_genetics_portal",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studySampleSize"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantRsId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"publicationYear"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"publicationFirstAuthor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pValueExponent"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pValueMantissa"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"oddsRatio"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"oddsRatioConfidenceIntervalLower"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"oddsRatioConfidenceIntervalUpper"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"beta"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"betaConfidenceIntervalLower"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"betaConfidenceIntervalUpper"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantFunctionalConsequence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"projectId"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:894}};ue.loc.source={body:`query OpenTargetsGeneticsQuery(
  $ensemblId: String!
  $efoId: String!
  $size: Int!
) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["ot_genetics_portal"]
    ) {
      rows {
        id
        disease {
          id
          name
        }
        diseaseFromSource
        studyId
        studySampleSize
        variantId
        variantRsId
        literature
        publicationYear
        publicationFirstAuthor
        pValueExponent
        pValueMantissa
        oddsRatio
        oddsRatioConfidenceIntervalLower
        oddsRatioConfidenceIntervalUpper
        beta
        betaConfidenceIntervalLower
        betaConfidenceIntervalUpper
        variantFunctionalConsequence {
          id
          label
        }
        resourceScore
        projectId
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Nn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Nn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Nn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Nn(a,n)})}var Ei={};(function(){ue.definitions.forEach(function(n){if(n.name){var i=new Set;Nn(n,i),Ei[n.name.value]=i}})})();function kt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function wd(e,n){var i={kind:e.kind,definitions:[kt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ei[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ei[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=kt(e,t);d&&i.definitions.push(d)}),i}wd(ue,"OpenTargetsGeneticsQuery");const $d=e=>`https://genetics.opentargets.org/variant/${e}`,Vd=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e})=>r(m,{to:`/disease/${e.id}`,children:e.name}),filterValue:({disease:e})=>e.name},{id:"diseaseFromSource",label:"Reported disease/phenotype",renderCell:({diseaseFromSource:e,studyId:n})=>{const i=e.replace(/['"]+/g,"");return r(m,{external:!0,to:Vr(n),children:e?i:n})}},{id:"literature",label:"Publication",renderCell:({literature:e,publicationYear:n,publicationFirstAuthor:i})=>e?r(P,{entries:[{name:e[0]}],customLabel:`${i} et al, ${n}`}):p,filterValue:({literature:e,publicationYear:n,publicationFirstAuthor:i})=>`${e} ${n} ${i}`},{id:"studySource",label:"Study source",renderCell:({projectId:e})=>e?Object.keys(Ta).indexOf(e)<0?p:Ta[e]:p},{id:"variantId",label:"Variant ID (RSID)",renderCell:({variantId:e,variantRsId:n})=>c(v,{children:[e?r(m,{external:!0,to:$d(e),children:e}):p,n?c(k,{variant:"caption",children:[" ","(",r(m,{external:!0,to:`http://www.ensembl.org/Homo_sapiens/Variation/Explore?v=${n}`,children:n}),")"]}):null]}),filterValue:({variantId:e,variantRsId:n})=>`${e} ${n}`},{id:"variantFunctionalConsequenceId",label:"Functional Consequence",renderCell:({variantFunctionalConsequence:e})=>e?r(m,{external:!0,to:Ne("SO",e.id.slice(3)),children:b(e.label)}):p,filterValue:({variantFunctionalConsequence:e})=>`${b(e.label)} ${e.id}`},{id:"pValueMantissa",label:c(v,{children:["Association ",r("i",{children:"p"}),"-value"]}),numeric:!0,sortable:!0,renderCell:({pValueMantissa:e,pValueExponent:n})=>r(K,{number:[e,n]}),comparator:(e,n)=>e.pValueMantissa*10**e.pValueExponent-n.pValueMantissa*10**n.pValueExponent},{id:"studySampleSize",label:"Sample size",numeric:!0,sortable:!0,renderCell:({studySampleSize:e})=>e?parseInt(e).toLocaleString():p},{id:"oddsRatio",label:"Odds Ratio (CI 95%)",numeric:!0,renderCell:({oddsRatio:e,oddsRatioConfidenceIntervalLower:n,oddsRatioConfidenceIntervalUpper:i})=>{const a=n&&i?`(${parseFloat(n.toFixed(3))}, ${parseFloat(i.toFixed(3))})`:"";return e?`${parseFloat(e.toFixed(3))} ${a}`:p}},{id:"betaConfidenceInterval",label:"Beta (CI 95%)",numeric:!0,renderCell:({beta:e,betaConfidenceIntervalLower:n,betaConfidenceIntervalUpper:i})=>{const a=n&&i?`(${parseFloat(n.toFixed(3))}, ${parseFloat(i.toFixed(3))})`:"";return e?`${parseFloat(e.toFixed(3))} ${a}`:p}},{id:"resourceScore",label:"L2G score",tooltip:c(v,{children:["Causal inference score - see"," ",r(m,{external:!0,to:"https://platform-docs.opentargets.org/evidence#open-targets-genetics-portal",children:"our documentation"})," ","for more information."]}),numeric:!0,sortable:!0,renderCell:({resourceScore:e})=>parseFloat(e.toFixed(5))}];function Dd({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{openTargetsGenetics:{count:l}}}=g(ma.fragments.OpenTargetsGeneticsSummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(ue,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(Fd,{symbol:a,name:s}),renderBody:d=>r($,{columns:Vd,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,order:"desc",rows:d.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,sortBy:"resourceScore",query:ue.loc.source.body,variables:o})})}const Ed={id:"otGenetics",name:"OT Genetics Portal",shortName:"OG",hasData:e=>e.openTargetsGenetics.count>0};var Cd=Object.freeze(Object.defineProperty({__proto__:null,definition:Ed,Summary:ma,Body:Dd},Symbol.toStringTag,{value:"Module"})),ze={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"PhenodigmSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"phenodigm"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"phenodigm",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:189}};ze.loc.source={body:`fragment PhenodigmSummaryFragment on Disease {
  phenodigm: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["phenodigm"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function In(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){In(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){In(a,n)}),e.definitions&&e.definitions.forEach(function(a){In(a,n)})}var Ci={};(function(){ze.definitions.forEach(function(n){if(n.name){var i=new Set;In(n,i),Ci[n.name.value]=i}})})();function ft(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Td(e,n){var i={kind:e.kind,definitions:[ft(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ci[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ci[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=ft(e,t);d&&i.definitions.push(d)}),i}Td(ze,"PhenodigmSummaryFragment");function va({definition:e}){const n=g(ze);return r(I,{definition:e,request:n,renderSummary:i=>`${i.phenodigm.count} entr${i.phenodigm.count===1?"y":"ies"}`,subText:f.animal_model})}va.fragments={PhenodigmSummaryFragment:ze};function Rd({symbol:e,name:n}){return c(v,{children:["Mapping of phenotypes in ",r("strong",{children:e})," animal model mutants similar to ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.sanger.ac.uk/tool/phenodigm/",external:!0,children:"Phenodigm"})]})}var ce={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IntOgenQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"phenodigm",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biologicalModelGeneticBackground"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biologicalModelAllelicComposition"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biologicalModelId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseModelAssociatedModelPhenotypes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseModelAssociatedHumanPhenotypes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetInModel"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:739}};ce.loc.source={body:`query IntOgenQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["phenodigm"]
    ) {
      rows {
        disease {
          id
          name
        }
        target {
          id
          approvedSymbol
        }
        diseaseFromSource
        biologicalModelGeneticBackground
        biologicalModelAllelicComposition
        biologicalModelId
        diseaseModelAssociatedModelPhenotypes {
          id
          label
        }
        diseaseModelAssociatedHumanPhenotypes {
          id
          label
        }
        score
        targetInModel
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Fn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Fn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Fn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Fn(a,n)})}var Ti={};(function(){ce.definitions.forEach(function(n){if(n.name){var i=new Set;Fn(n,i),Ti[n.name.value]=i}})})();function gt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Od(e,n){var i={kind:e.kind,definitions:[gt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ti[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ti[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=gt(e,t);d&&i.definitions.push(d)}),i}Od(ce,"IntOgenQuery");const xd=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:b(n)})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>[e.name,n].join()},{id:"diseaseModelAssociatedHumanPhenotypes",label:"Human phenotypes",renderCell:({diseaseModelAssociatedHumanPhenotypes:e})=>{const n=e?e.map(i=>({name:i.label,group:"Human phenotypes"})):[];return r(M,{entries:n,showSingle:!1,message:`${e?e.length:0} phenotype${e===null||e.length!==1?"s":""}`})},filterValue:({diseaseModelAssociatedHumanPhenotypes:e=[]})=>e.map(n=>n.label).join()},{id:"diseaseModelAssociatedModelPhenotypes",label:"Mouse phenotypes",renderCell:({diseaseModelAssociatedModelPhenotypes:e})=>r(M,{entries:e.map(n=>({name:n.label,group:"Mouse phenotypes"})),showSingle:!1,message:`${e.length} phenotype${e.length!==1?"s":""}`}),filterValue:({diseaseModelAssociatedModelPhenotypes:e=[]})=>e.map(n=>n.label).join()},{id:"literature",label:"Mouse model allelic composition",renderCell:({biologicalModelAllelicComposition:e,biologicalModelGeneticBackground:n,biologicalModelId:i})=>e&&n?i?r(m,{external:!0,to:`https://identifiers.org/${i}`,children:r(Pa,{allelicComposition:e,geneticBackground:n})}):r(Pa,{allelicComposition:e,geneticBackground:n}):p}];function Ad({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{phenodigm:{count:l}}}=g(va.fragments.PhenodigmSummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(ce,{variables:o});return r(F,{definition:e,chipText:f.animal_model,request:t,renderDescription:()=>r(Rd,{symbol:a,name:s}),renderBody:d=>r($,{columns:xd,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,rows:d.disease.evidences.rows,pageSize:5,rowsPerPageOptions:V,showGlobalFilter:!0,query:ce.loc.source.body,variables:o})})}const zd={id:"phenodigm",name:"PhenoDigm",shortName:"PH",hasData:e=>e.phenodigm.count>0};var Ld=Object.freeze(Object.defineProperty({__proto__:null,definition:zd,Summary:va,Body:Ad},Symbol.toStringTag,{value:"Module"})),Le={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"PheWASCatalogSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"phewasCatalogSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"phewas_catalog",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:201}};Le.loc.source={body:`fragment PheWASCatalogSummary on Disease {
  phewasCatalogSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["phewas_catalog"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function wn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){wn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){wn(a,n)}),e.definitions&&e.definitions.forEach(function(a){wn(a,n)})}var Ri={};(function(){Le.definitions.forEach(function(n){if(n.name){var i=new Set;wn(n,i),Ri[n.name.value]=i}})})();function pt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Pd(e,n){var i={kind:e.kind,definitions:[pt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ri[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ri[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=pt(e,t);d&&i.definitions.push(d)}),i}Pd(Le,"PheWASCatalogSummary");function ka({definition:e}){const n=g(Le);return r(I,{definition:e,request:n,renderSummary:({phewasCatalogSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}ka.fragments={PheWASCatalogSummary:Le};const qd=({symbol:e,diseaseName:n})=>c(v,{children:["Phenome-wide associated loci in the promiximty of ",r("strong",{children:e})," ","as likely causal gene for ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://phewascatalog.org",external:!0,children:"PheWAS Catalog"})]});var me={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"PhewasCatalogQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"phewas_catalog",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantRsId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantFunctionalConsequence"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyCases"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"oddsRatio"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:541}};me.loc.source={body:`query PhewasCatalogQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["phewas_catalog"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        variantRsId
        variantId
        variantFunctionalConsequence {
          id
          label
        }
        resourceScore
        studyCases
        oddsRatio
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function $n(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){$n(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){$n(a,n)}),e.definitions&&e.definitions.forEach(function(a){$n(a,n)})}var Oi={};(function(){me.definitions.forEach(function(n){if(n.name){var i=new Set;$n(n,i),Oi[n.name.value]=i}})})();function St(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Bd(e,n){var i={kind:e.kind,definitions:[St(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Oi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Oi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=St(e,t);d&&i.definitions.push(d)}),i}Bd(me,"PhewasCatalogQuery");const _d=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"variantRsId",label:"Variant RSID (ID)",renderCell:({variantRsId:e,variantId:n})=>c(v,{children:[r(m,{external:!0,to:`http://www.ensembl.org/Homo_sapiens/Variation/Explore?v=${e}`,children:e})," ",n?c(k,{variant:"caption",children:["(",r(m,{external:!0,to:`https://genetics.opentargets.org/variant/${n}`,children:n}),")"]}):null]})},{id:"variantFunctionalConsequence",label:"Functional Consequence",renderCell:({variantFunctionalConsequence:e})=>e?r(m,{external:!0,to:Ne("SO",e.id.slice(3)),children:b(e.label)}):p,filterValue:({variantFunctionalConsequence:e})=>b(e.label)},{id:"studyCases",label:"Cases",renderCell:({studyCases:e})=>pr(e),sortable:!0,numeric:!0},{id:"oddsRatio",label:"Odds ratio",renderCell:({oddsRatio:e})=>e.toFixed(Wt),sortable:!0,numeric:!0},{id:"resourceScore",label:c(v,{children:[r("i",{children:"p"}),"-value"]}),renderCell:({resourceScore:e})=>r(K,{number:e}),sortable:!0,numeric:!0}];function Qd({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(ka.fragments.PheWASCatalogSummary),o={ensemblId:a,efoId:s,size:l.phewasCatalogSummary.count},t=w(me,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(qd,{symbol:i.symbol,diseaseName:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:_d,rows:u,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,sortBy:"resourceScore",order:"asc",query:me.loc.source.body,variables:o})}})}const Gd={id:"phewasCatalog",name:"PheWAS Catalog",shortName:"PC",hasData:e=>e.phewasCatalogSummary.count>0};var Md=Object.freeze(Object.defineProperty({__proto__:null,definition:Gd,Summary:ka,Body:Qd},Symbol.toStringTag,{value:"Module"})),Pe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ProgenySummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"progeny"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"progeny",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:183}};Pe.loc.source={body:`fragment ProgenySummaryFragment on Disease {
  progeny: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["progeny"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Vn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Vn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Vn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Vn(a,n)})}var xi={};(function(){Pe.definitions.forEach(function(n){if(n.name){var i=new Set;Vn(n,i),xi[n.name.value]=i}})})();function ht(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function jd(e,n){var i={kind:e.kind,definitions:[ht(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=xi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=xi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=ht(e,t);d&&i.definitions.push(d)}),i}jd(Pe,"ProgenySummaryFragment");function fa({definition:e}){const n=g(Pe);return r(I,{definition:e,request:n,renderSummary:i=>`${i.progeny.count} entr${i.progeny.count===1?"y":"ies"}`,subText:f.affected_pathway})}fa.fragments={ProgenySummaryFragment:Pe};function Hd({symbol:e,name:n}){return c(v,{children:["Pathway-level analysis of gene expression perturbation experiments associating ",r("strong",{children:e})," with ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://saezlab.github.io/progeny/",external:!0,children:"PROGENy"})]})}var ve={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ProgenyQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"progeny",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pathways"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:478}};ve.loc.source={body:`query ProgenyQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
    disease(efoId: $efoId) {
      id
      evidences(
        ensemblIds: [$ensemblId]
        enableIndirect: true
        size: $size
        datasourceIds: ["progeny"]
      ) {
        rows {
          disease {
            id
            name
          }
          diseaseFromSource
          pathways {
            id
            name
          }
          resourceScore
        }
      }
    }
  }
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Dn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Dn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Dn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Dn(a,n)})}var Ai={};(function(){ve.definitions.forEach(function(n){if(n.name){var i=new Set;Dn(n,i),Ai[n.name.value]=i}})})();function bt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Ud(e,n){var i={kind:e.kind,definitions:[bt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ai[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ai[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=bt(e,t);d&&i.definitions.push(d)}),i}Ud(ve,"ProgenyQuery");const Wd=e=>`https://identifiers.org/reactome:${e}`,Jd=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:b(n)})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>[e.name,n].join()},{id:"pathwayName",label:"Significant pathway",renderCell:({pathways:e})=>(e==null?void 0:e.length)>=1?r(m,{external:!0,to:Wd(e[0].id),children:e[0].name}):p},{id:"resourceScore",label:c(v,{children:[r("i",{children:"p"}),"-value"]}),numeric:!0,sortable:!0,renderCell:({resourceScore:e})=>r(K,{number:e})}];function Yd({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{progeny:{count:l}}}=g(fa.fragments.ProgenySummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(ve,{variables:o});return r(F,{definition:e,chipText:f.affected_pathway,request:t,renderDescription:()=>r(Hd,{symbol:a,name:s}),renderBody:d=>r($,{columns:Jd,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,order:"asc",rows:d.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,sortBy:"resourceScore",query:ve.loc.source.body,variables:o})})}const Kd={id:"progeny",name:"PROGENy",shortName:"PY",hasData:e=>e.progeny.count>0};var Xd=Object.freeze(Object.defineProperty({__proto__:null,definition:Kd,Summary:fa,Body:Yd},Symbol.toStringTag,{value:"Module"})),qe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"reactomeSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"reactomeSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"reactome",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:185}};qe.loc.source={body:`fragment reactomeSummary on Disease {
  reactomeSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["reactome"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function En(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){En(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){En(a,n)}),e.definitions&&e.definitions.forEach(function(a){En(a,n)})}var zi={};(function(){qe.definitions.forEach(function(n){if(n.name){var i=new Set;En(n,i),zi[n.name.value]=i}})})();function yt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Zd(e,n){var i={kind:e.kind,definitions:[yt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=zi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=zi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=yt(e,t);d&&i.definitions.push(d)}),i}Zd(qe,"reactomeSummary");function ga({definition:e}){const n=g(qe);return r(I,{definition:e,request:n,renderSummary:({reactomeSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.affected_pathway})}ga.fragments={reactomeSummary:qe};const es=({symbol:e,name:n})=>c(v,{children:["Literature-curated list of pathway reactions affected by genetic alterations or changes in gene expression that lead to disregulation of"," ",r("strong",{children:e})," in the context of ",r("strong",{children:n}),". Source:\xA0",r(m,{to:"https://reactome.org",external:!0,children:"Reactome"})]});var ke={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"reactomeQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"reactome",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reactionName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reactionId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pathways"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"targetModulation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantAminoacidDescriptions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:615}};ke.loc.source={body:`query reactomeQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
    disease(efoId: $efoId) {
      id
      evidences(
        ensemblIds: [$ensemblId]
        enableIndirect: true
        datasourceIds: ["reactome"]
        size: $size
      ) {
        rows {
          disease {
            id
            name
          }
          diseaseFromSource
          reactionName
          reactionId
          targetFromSourceId
          pathways{
            id
            name
          }
          targetModulation
          variantAminoacidDescriptions
          literature
        }
      }
    }
  }
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Cn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Cn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Cn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Cn(a,n)})}var Li={};(function(){ke.definitions.forEach(function(n){if(n.name){var i=new Set;Cn(n,i),Li[n.name.value]=i}})})();function Nt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ns(e,n){var i={kind:e.kind,definitions:[Nt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Li[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Li[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Nt(e,t);d&&i.definitions.push(d)}),i}ns(ke,"reactomeQuery");const is=[{id:"disease.name",label:"Disease / phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:r(J,{children:e.name})})}),width:"18%"},{id:"pathwayName",label:"Pathway",renderCell:({pathways:e})=>{if(!e||e.length===0)return p;if(e.length===1)return r(m,{external:!0,to:`http://www.reactome.org/PathwayBrowser/#${e[0].id}`,children:r(J,{children:e[0].name})});{const n=e.map(i=>({url:`http://www.reactome.org/PathwayBrowser/#${i.id}`,name:i.name,group:"Pathways"}));return r(M,{entries:n,message:`${n.length} pathways`})}},width:"17%"},{id:"reactionId",label:"Reaction",renderCell:({reactionName:e,reactionId:n})=>r(m,{external:!0,to:`https://identifiers.org/reactome/${n}`,children:r(J,{children:e})}),width:"17%"},{id:"targetFromSourceId",label:"Reported target",renderCell:({targetFromSourceId:e})=>r(m,{external:!0,to:`https://identifiers.org/uniprot/${e}`,children:r(J,{children:e})}),width:"12%"},{id:"targetModulation",label:"Target modulation",renderCell:({targetModulation:e})=>e?r(J,{children:b(e)}):p,filterValue:({targetModulation:e})=>b(e),width:"12%"},{filterValue:({variantAminoacidDescriptions:e})=>e.map(n=>n).join(),label:"Amino acid variation",renderCell:({variantAminoacidDescriptions:e})=>(e==null?void 0:e.length)>1?r(M,{entries:e.map(n=>({name:n,group:"Amino acid variation"}))}):(e==null?void 0:e.length)===1?r(J,{children:e[0]}):p,width:"12%"},{id:"literature",label:"Literature",renderCell:({literature:e=[]})=>{const n=[];return e==null||e.forEach(i=>{i!=="NA"&&n.push({name:i,url:O(i),group:"literature"})}),r(P,{entries:n})},width:"12%"}];function as({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(ga.fragments.reactomeSummary),o={ensemblId:a,efoId:s,size:l.reactomeSummary.count},t=w(ke,{variables:o});return r(F,{definition:e,chipText:f.affected_pathway,request:t,renderDescription:()=>r(es,{symbol:i.symbol,name:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:is,rows:u,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,fixed:!0,noWrapHeader:!1,query:ke.loc.source.body,variables:o})}})}const ts={id:"reactome",name:"Reactome",shortName:"RT",hasData:({reactomeSummary:e})=>e.count>0};var rs=Object.freeze(Object.defineProperty({__proto__:null,definition:ts,Summary:ga,Body:as},Symbol.toStringTag,{value:"Module"})),Be={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SlapEnrichSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"slapEnrich"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"slapenrich",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:192}};Be.loc.source={body:`fragment SlapEnrichSummaryFragment on Disease {
  slapEnrich: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["slapenrich"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Tn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Tn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Tn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Tn(a,n)})}var Pi={};(function(){Be.definitions.forEach(function(n){if(n.name){var i=new Set;Tn(n,i),Pi[n.name.value]=i}})})();function It(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ls(e,n){var i={kind:e.kind,definitions:[It(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Pi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Pi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=It(e,t);d&&i.definitions.push(d)}),i}ls(Be,"SlapEnrichSummaryFragment");function pa({definition:e}){const n=g(Be);return r(I,{definition:e,request:n,renderSummary:i=>`${i.slapEnrich.count} entr${i.slapEnrich.count===1?"y":"ies"}`,subText:f.affected_pathway})}pa.fragments={SlapEnrichSummaryFragment:Be};function ds({symbol:e,name:n}){return c(v,{children:["Pathway-level analysis tool providing enrichment on genomic alterations associating ",r("strong",{children:e})," with ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://saezlab.github.io/SLAPenrich/",external:!0,children:"SLAPenrich"})]})}var fe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SlapEnrichQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"slapenrich",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pathways"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:437}};fe.loc.source={body:`query SlapEnrichQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["slapenrich"]
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        pathways {
          id
          name
        }
        resourceScore
      }
    }
  }
}`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Rn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Rn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Rn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Rn(a,n)})}var qi={};(function(){fe.definitions.forEach(function(n){if(n.name){var i=new Set;Rn(n,i),qi[n.name.value]=i}})})();function Ft(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ss(e,n){var i={kind:e.kind,definitions:[Ft(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=qi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=qi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ft(e,t);d&&i.definitions.push(d)}),i}ss(fe,"SlapEnrichQuery");const os=e=>`https://identifiers.org/reactome:${e}`,us=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:b(n)})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>[e.name,n].join()},{id:"pathwayName",label:"Significant pathway",renderCell:({pathways:e})=>(e==null?void 0:e.length)>=1?r(m,{external:!0,to:os(e[0].id),children:e[0].name}):p},{id:"resourceScore",label:c(v,{children:[r("i",{children:"p"}),"-value"]}),numeric:!0,sortable:!0,renderCell:({resourceScore:e})=>r(K,{number:e})}];function cs({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{slapEnrich:{count:l}}}=g(pa.fragments.SlapEnrichSummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(fe,{variables:o});return r(F,{definition:e,chipText:f.affected_pathway,request:t,renderDescription:()=>r(ds,{symbol:a,name:s}),renderBody:d=>r($,{columns:us,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,order:"asc",rows:d.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,sortBy:"resourceScore",query:fe.loc.source.body,variables:o})})}const ms={id:"slapEnrich",name:"SLAPenrich",shortName:"SE",hasData:e=>e.slapEnrich.count>0};var vs=Object.freeze(Object.defineProperty({__proto__:null,definition:ms,Summary:pa,Body:cs},Symbol.toStringTag,{value:"Module"})),_e={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SysBioSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"sysBio"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"sysbio",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:180}};_e.loc.source={body:`fragment SysBioSummaryFragment on Disease {
  sysBio: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["sysbio"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function On(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){On(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){On(a,n)}),e.definitions&&e.definitions.forEach(function(a){On(a,n)})}var Bi={};(function(){_e.definitions.forEach(function(n){if(n.name){var i=new Set;On(n,i),Bi[n.name.value]=i}})})();function wt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ks(e,n){var i={kind:e.kind,definitions:[wt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Bi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Bi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=wt(e,t);d&&i.definitions.push(d)}),i}ks(_e,"SysBioSummaryFragment");function Sa({definition:e}){const n=g(_e);return r(I,{definition:e,request:n,renderSummary:i=>`${i.sysBio.count} entr${i.sysBio.count===1?"y":"ies"}`,subText:f.affected_pathway})}Sa.fragments={SysBioSummaryFragment:_e};function fs({symbol:e,name:n}){return c(v,{children:["Literature-reported analysis defining gene signatures causally associating"," ",r("strong",{children:e})," with ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://platform-docs.opentargets.org/evidence#gene-signatures",external:!0,children:"Open Targets"})]})}var ge={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SysBioQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"sysbio",block:!1}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"studyOverview"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pathways"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:475}};ge.loc.source={body:`query SysBioQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      size: $size
      datasourceIds: ["sysbio"]
    ) {
      rows {
        disease {
          id
          name
        }
        target {
          id
          approvedSymbol
        }
        studyOverview
        literature
        pathways {
          name
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function xn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){xn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){xn(a,n)}),e.definitions&&e.definitions.forEach(function(a){xn(a,n)})}var _i={};(function(){ge.definitions.forEach(function(n){if(n.name){var i=new Set;xn(n,i),_i[n.name.value]=i}})})();function $t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function gs(e,n){var i={kind:e.kind,definitions:[$t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=_i[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=_i[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=$t(e,t);d&&i.definitions.push(d)}),i}gs(ge,"SysBioQuery");const ps=[{id:"disease",label:"Disease/phenotype",renderCell:({disease:e})=>r(m,{to:`/disease/${e.id}`,children:e.name}),filterValue:({disease:e})=>e.name},{id:"pathwayName",label:"Gene set",renderCell:({pathways:e,studyOverview:n})=>(e==null?void 0:e.length)>=1?n?r(h,{title:n,showHelpIcon:!0,children:e[0].name}):e[0].name:p},{id:"literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}];function Ss({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{sysBio:{count:l}}}=g(Sa.fragments.SysBioSummaryFragment),o={ensemblId:n,efoId:i,size:l},t=w(ge,{variables:o});return r(F,{definition:e,chipText:f.affected_pathway,request:t,renderDescription:()=>r(fs,{symbol:a,name:s}),renderBody:d=>r($,{columns:ps,dataDownloader:!0,dataDownloaderFileStem:`otgenetics-${n}-${i}`,rows:d.disease.evidences.rows,pageSize:10,rowsPerPageOptions:V,showGlobalFilter:!0,query:ge.loc.source.body,variables:o})})}const hs={id:"sysBio",name:"Gene signatures",shortName:"GS",hasData:e=>e.sysBio.count>0};var bs=Object.freeze(Object.defineProperty({__proto__:null,definition:hs,Summary:Sa,Body:Ss},Symbol.toStringTag,{value:"Module"})),Qe={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"UniprotLiteratureSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"uniprotLiteratureSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"uniprot_literature",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:213}};Qe.loc.source={body:`fragment UniprotLiteratureSummary on Disease {
  uniprotLiteratureSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["uniprot_literature"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function An(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){An(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){An(a,n)}),e.definitions&&e.definitions.forEach(function(a){An(a,n)})}var Qi={};(function(){Qe.definitions.forEach(function(n){if(n.name){var i=new Set;An(n,i),Qi[n.name.value]=i}})})();function Vt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ys(e,n){var i={kind:e.kind,definitions:[Vt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Qi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Qi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Vt(e,t);d&&i.definitions.push(d)}),i}ys(Qe,"UniprotLiteratureSummary");function ha({definition:e}){const n=g(Qe);return r(I,{definition:e,request:n,renderSummary:({uniprotLiteratureSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}ha.fragments={UniprotLiteratureSummary:Qe};const Ns=({symbol:e,diseaseName:n})=>c(v,{children:["Literature-based curation associating genetic variations affecting"," ",r("strong",{children:e})," protein products with"," ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.uniprot.org",external:!0,children:"UniProt"})]});var pe={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"UniprotLiteratureQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"uniprot_literature",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:512}};pe.loc.source={body:`query UniprotLiteratureQuery(
    $ensemblId: String!
    $efoId: String!
    $size: Int!
  ) {
    disease(efoId: $efoId) {
      id
      evidences(
        ensemblIds: [$ensemblId]
        enableIndirect: true
        datasourceIds: ["uniprot_literature"]
        size: $size
      ) {
        rows {
          disease {
            id
            name
          }
          diseaseFromSource
          targetFromSourceId
          studyId
          literature
          confidence
        }
      }
    }
  }`,name:"GraphQL request",locationOffset:{line:1,column:1}};function zn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){zn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){zn(a,n)}),e.definitions&&e.definitions.forEach(function(a){zn(a,n)})}var Gi={};(function(){pe.definitions.forEach(function(n){if(n.name){var i=new Set;zn(n,i),Gi[n.name.value]=i}})})();function Dt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Is(e,n){var i={kind:e.kind,definitions:[Dt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Gi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Gi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Dt(e,t);d&&i.definitions.push(d)}),i}Is(pe,"UniprotLiteratureQuery");const Fs=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"targetFromSourceId",label:"Reported protein",renderCell:({targetFromSourceId:e,studyId:n})=>r(m,{external:!0,to:Ne("uniprot",e),children:e})},{id:"confidence",label:"Confidence",renderCell:({confidence:e})=>r(v,{children:b(e)})},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}];function ws({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(ha.fragments.UniprotLiteratureSummary),o={ensemblId:a,efoId:s,size:l.uniprotLiteratureSummary.count},t=w(pe,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(Ns,{symbol:i.symbol,diseaseName:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:Fs,rows:u,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,query:pe.loc.source.body,variables:o})}})}const $s={id:"uniprotLiterature",name:"UniProt literature",shortName:"UL",hasData:({uniprotLiteratureSummary:e})=>e.count>0};var Vs=Object.freeze(Object.defineProperty({__proto__:null,definition:$s,Summary:ha,Body:ws},Symbol.toStringTag,{value:"Module"})),Ge={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"UniprotVariantsSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"uniprotVariantsSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"uniprot_variants",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:207}};Ge.loc.source={body:`fragment UniprotVariantsSummary on Disease {
  uniprotVariantsSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["uniprot_variants"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Ln(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Ln(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Ln(a,n)}),e.definitions&&e.definitions.forEach(function(a){Ln(a,n)})}var Mi={};(function(){Ge.definitions.forEach(function(n){if(n.name){var i=new Set;Ln(n,i),Mi[n.name.value]=i}})})();function Et(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Ds(e,n){var i={kind:e.kind,definitions:[Et(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Mi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Mi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Et(e,t);d&&i.definitions.push(d)}),i}Ds(Ge,"UniprotVariantsSummary");function ba({definition:e}){const n=g(Ge);return r(I,{definition:e,request:n,renderSummary:({uniprotVariantsSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}ba.fragments={UniprotVariantsSummary:Ge};const Es=({symbol:e,diseaseName:n})=>c(v,{children:["Literature-based curation associating genetic variations affecting"," ",r("strong",{children:e})," protein products with"," ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.uniprot.org",external:!0,children:"UniProt"})]});var Se={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"UniprotVariantsQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"uniprot_variants",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variantRsId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:455}};Se.loc.source={body:`query UniprotVariantsQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["uniprot_variants"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        targetFromSourceId
        variantRsId
        confidence
        literature
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Pn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Pn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Pn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Pn(a,n)})}var ji={};(function(){Se.definitions.forEach(function(n){if(n.name){var i=new Set;Pn(n,i),ji[n.name.value]=i}})})();function Ct(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Cs(e,n){var i={kind:e.kind,definitions:[Ct(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ji[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=ji[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ct(e,t);d&&i.definitions.push(d)}),i}Cs(Se,"UniprotVariantsQuery");const Ts=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"targetFromSourceId",label:"Reported protein",renderCell:({targetFromSourceId:e})=>r(m,{external:!0,to:Ne("uniprot",e),children:e})},{id:"variantRsId",label:"Variant",renderCell:({variantRsId:e})=>r(m,{external:!0,to:`http://www.ensembl.org/Homo_sapiens/Variation/Explore?v=${e}`,children:e})},{id:"confidence",label:"Confidence"},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}];function Rs({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(ba.fragments.UniprotVariantsSummary),o={ensemblId:a,efoId:s,size:l.uniprotVariantsSummary.count},t=w(Se,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(Es,{symbol:i.symbol,diseaseName:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:Ts,rows:u,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,query:Se.loc.source.body,variables:o})}})}const Os={id:"uniprotVariants",name:"UniProt variants",shortName:"UV",hasData:e=>e.uniprotVariantsSummary.count>0};var xs=Object.freeze(Object.defineProperty({__proto__:null,definition:Os,Summary:ba,Body:Rs},Symbol.toStringTag,{value:"Module"})),Me={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"OrphanetSummaryFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"orphanetSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"orphanet",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:193}};Me.loc.source={body:`fragment OrphanetSummaryFragment on Disease {
  orphanetSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["orphanet"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function qn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){qn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){qn(a,n)}),e.definitions&&e.definitions.forEach(function(a){qn(a,n)})}var Hi={};(function(){Me.definitions.forEach(function(n){if(n.name){var i=new Set;qn(n,i),Hi[n.name.value]=i}})})();function Tt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function As(e,n){var i={kind:e.kind,definitions:[Tt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Hi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Hi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Tt(e,t);d&&i.definitions.push(d)}),i}As(Me,"OrphanetSummaryFragment");function ya({definition:e}){const n=g(Me);return r(I,{definition:e,request:n,renderSummary:({orphanetSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.genetic_association})}ya.fragments={OrphanetSummaryFragment:Me};const zs=({symbol:e,diseaseName:n})=>c(v,{children:["Expert-reviewed data supporting the relationship between"," ",r("strong",{children:e})," and ",r("strong",{children:n}),". Source:"," ",r(m,{to:"https://www.orpha.net/consor/cgi-bin/Disease_Genes.php",external:!0,children:"Orphanet"})]});var he={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"OrphanetQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"orphanet",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseFromSourceMappedId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alleleOrigins"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:606}};he.loc.source={body:`query OrphanetQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["orphanet"]
      size: $size
    ) {
      count
      rows {
        target {
          id
          approvedSymbol
        }
        disease {
          id
          name
        }
        diseaseFromSource
        diseaseFromSourceId
        diseaseFromSourceMappedId
        targetFromSource
        targetFromSourceId
        alleleOrigins
        confidence
        literature
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Bn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Bn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Bn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Bn(a,n)})}var Ui={};(function(){he.definitions.forEach(function(n){if(n.name){var i=new Set;Bn(n,i),Ui[n.name.value]=i}})})();function Rt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Ls(e,n){var i={kind:e.kind,definitions:[Rt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ui[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ui[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Rt(e,t);d&&i.definitions.push(d)}),i}Ls(he,"OrphanetQuery");const Ps=[{id:"disease.name",label:"Disease/phenotype",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})}),filterValue:({disease:e,diseaseFromSource:n})=>`${e.name} ${e.id} ${n}`},{id:"targetFromSourceId",label:"Reported protein",renderCell:({targetFromSource:e,targetFromSourceId:n})=>r(m,{to:`/target/${n}`,children:e}),filterValue:({targetFromSource:e,targetFromSourceId:n})=>`${e} ${n}`},{id:"alleleOrigins",label:"Allele origin",renderCell:({alleleOrigins:e})=>e.join("; "),filterValue:({alleleOrigins:e})=>e.join("; ")},{id:"confidence",label:"Confidence",renderCell:({confidence:e})=>e},{label:"Literature",renderCell:({literature:e})=>{const n=(e==null?void 0:e.reduce((i,a)=>(a!=="NA"&&i.push({name:a,url:O(a),group:"literature"}),i),[]))||[];return r(P,{entries:n})}}],qs=[{label:"Disease",exportValue:e=>e.disease.name},{label:"Disease ID",exportValue:e=>e.disease.id},{label:"Disease from source",exportValue:e=>e.diseaseFromSource},{label:"Target from source",exportValue:e=>e.targetFromSource},{label:"Target from source ID",exportValue:e=>e.targetFromSourceId},{label:"Allele origins",exportValue:e=>e.alleleOrigins.join("; ")},{label:"Confidence",exportValue:e=>e.confidence},{label:"Publication IDs",exportValue:e=>e.literature.join(", ")}];function Bs({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:{orphanetSummary:{count:l}}}=g(ya.fragments.OrphanetSummaryFragment),o={ensemblId:a,efoId:s,size:l},t=w(he,{variables:o});return r(F,{definition:e,chipText:f.genetic_association,request:t,renderDescription:()=>r(zs,{symbol:i.symbol,diseaseName:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:Ps,rows:u,dataDownloader:!0,dataDownloaderFileStem:`orphanet-${a}-${s}`,dataDownloaderColumns:qs,showGlobalFilter:!0,rowsPerPageOptions:V,query:he.loc.source.body,variables:o})}})}const _s={id:"orphanet",name:"Orphanet",shortName:"ON",hasData:e=>e.orphanetSummary.count>0};var Qs=Object.freeze(Object.defineProperty({__proto__:null,definition:_s,Summary:ya,Body:Bs},Symbol.toStringTag,{value:"Module"})),je={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"OtCrisprSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"OtCrisprSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_crispr",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:186}};je.loc.source={body:`fragment OtCrisprSummary on Disease {
  OtCrisprSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["ot_crispr"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function _n(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){_n(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){_n(a,n)}),e.definitions&&e.definitions.forEach(function(a){_n(a,n)})}var Wi={};(function(){je.definitions.forEach(function(n){if(n.name){var i=new Set;_n(n,i),Wi[n.name.value]=i}})})();function Ot(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Gs(e,n){var i={kind:e.kind,definitions:[Ot(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Wi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Wi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Ot(e,t);d&&i.definitions.push(d)}),i}Gs(je,"OtCrisprSummary");function Na({definition:e}){const n=g(je);return r(I,{definition:e,request:n,renderSummary:({OtCrisprSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.ot_partner})}Na.fragments={OtCrisprSummary:je};const Ms=({symbol:e,name:n})=>c(v,{children:["Prepublication CRISPR knockout screens from Open Targets (OTAR) experimental projects, associating ",r("strong",{children:e})," and ",r("strong",{children:n}),". Source:"," ",r(m,{external:!0,to:"http://home.opentargets.org/",children:"Open Targets"})]});function B({label:e,description:n,newline:i=!1}){return c(k,{variant:"body2",children:[c("span",{style:{fontWeight:"bold"},children:[e,":"]})," ",i?r("br",{}):null,n]})}var Zn={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CrisprQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_crispr",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"projectId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contrast"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyOverview"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cellType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cellLineBackground"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"crisprScreenLibrary"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"statisticalTestTail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"log2FoldChangeValue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseCellLines"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:587}};Zn.loc.source={body:`query CrisprQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["ot_crispr"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        projectId
        contrast
        studyOverview
        cellType
        cellLineBackground
        crisprScreenLibrary
        statisticalTestTail
        resourceScore
        log2FoldChangeValue
        diseaseCellLines {
          name
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Qn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Qn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Qn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Qn(a,n)})}var Ji={};(function(){Zn.definitions.forEach(function(n){if(n.name){var i=new Set;Qn(n,i),Ji[n.name.value]=i}})})();function xt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function js(e,n){var i={kind:e.kind,definitions:[xt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ji[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ji[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=xt(e,t);d&&i.definitions.push(d)}),i}js(Zn,"CrisprQuery");const Hs=q(e=>({significanceIcon:{color:e.palette.primary.main}})),Us=e=>[{id:"disease",label:"Reported disease",renderCell:n=>r(m,{to:`/disease/${n.disease.id}`,children:n.disease.name}),filterValue:n=>n.disease.name+", "+n.disease.id},{id:"projectId",label:"OTAR project code",renderCell:n=>r(m,{external:!0,to:`http://home.opentargets.org/${n.projectId}`,children:n.projectId})},{id:"contrast",label:"Contrast / Study overview",renderCell:n=>n.contrast?r(h,{showHelpIcon:!0,title:r(B,{label:"Study overview",description:n.studyOverview}),children:r("span",{children:n.contrast})}):n.studyOverview,width:"25%",filterValue:n=>n.contrast+"; "+n.studyOverview},{id:"cellType",label:"Cell type",renderCell:n=>n.cellLineBackground?r(h,{showHelpIcon:!0,title:r(B,{label:"Cell line background",description:n.cellLineBackground}),children:r("span",{children:n.cellType})}):n.cellType,filterValue:n=>n.cellType+"; "+n.cellLineBackground},{id:"log2FoldChangeValue",label:"log2 fold change",renderCell:n=>n.log2FoldChangeValue?n.log2FoldChangeValue:"N/A"},{id:"resourceScore",label:"Significance",filterValue:n=>n.resourceScore+"; "+n.statisticalTestTail}],Ws=[{label:"disease",exportValue:e=>e.disease.name},{label:"disease id",exportValue:e=>e.disease.id},{label:"OTAR project code",exportValue:e=>e.projectId},{label:"contrast",exportValue:e=>e.contrast},{label:"study overview",exportValue:e=>e.studyOverview},{label:"cell type",exportValue:e=>e.cellType},{label:"cell line background",exportValue:e=>e.cellLineBackground},{label:"CRISPR screen library",exportValue:e=>e.crisprScreenLibrary},{label:"resource score",exportValue:e=>e.resourceScore},{label:"statistical test tail",exportValue:e=>e.statisticalTestTail}];function Js({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(Na.fragments.OtCrisprSummary),o=w(Zn,{variables:{ensemblId:a,efoId:s,size:l.OtCrisprSummary.count}});return Hs(),r(F,{definition:e,chipText:f.ot_partner,request:o,renderDescription:()=>r(Ms,{symbol:i.symbol,name:i.name}),renderBody:({disease:t})=>{const{rows:d}=t.evidences;return r($,{columns:Us(),rows:d,dataDownloader:!0,dataDownloaderColumns:Ws,dataDownloaderFileStem:`${a}-${s}-otcrispr`,showGlobalFilter:!0,sortBy:"resourceScore",fixed:!0,noWrap:!1,noWrapHeader:!1,rowsPerPageOptions:V})}})}const At="otCrispr",Ys={id:At,name:"Open Targets CRISPR",shortName:"OT",hasData:({OtCrisprSummary:e})=>e.count>0,isPrivate:ia(At)};var Ks=Object.freeze(Object.defineProperty({__proto__:null,definition:Ys,Summary:Na,Body:Js},Symbol.toStringTag,{value:"Module"})),He={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"otEncoreSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"otEncoreSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"encore",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:183}};He.loc.source={body:`fragment otEncoreSummary on Disease {
  otEncoreSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["encore"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Gn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Gn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Gn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Gn(a,n)})}var Yi={};(function(){He.definitions.forEach(function(n){if(n.name){var i=new Set;Gn(n,i),Yi[n.name.value]=i}})})();function zt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function Xs(e,n){var i={kind:e.kind,definitions:[zt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Yi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Yi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=zt(e,t);d&&i.definitions.push(d)}),i}Xs(He,"otEncoreSummary");function Ia({definition:e}){const n=g(He);return r(I,{definition:e,request:n,renderSummary:({otEncoreSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.ot_partner})}Ia.fragments={otEncoreSummary:He};const Zs=({symbol:e,name:n})=>c(v,{children:["Interim data from dual-knockout screens generated by the"," ",r(m,{external:!0,to:"http://home.opentargets.org/OTAR2062",children:"OTAR2-062 ENCORE project"}),", associating ",r("strong",{children:e})," and ",r("strong",{children:n}),". Source:"," ",r(m,{external:!0,to:"http://home.opentargets.org/",children:"Open Targets"})]});var ei={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"EncoreQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"encore",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"target"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"approvedSymbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseCellLines"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tissue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tissueId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"biomarkerList"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"targetRole"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"interactingTargetRole"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cellType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"interactingTargetFromSourceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"phenotypicConsequenceLogFoldChange"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"phenotypicConsequenceFDR"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"phenotypicConsequencePValue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"geneticInteractionMethod"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"geneticInteractionScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"geneticInteractionPValue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"geneticInteractionFDR"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"geneInteractionType"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:934}};ei.loc.source={body:`query EncoreQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["encore"]
      size: $size
    ) {
      rows {
        target {
          id
          approvedSymbol
        }
        disease {
          id
          name
        }
        diseaseCellLines {
          name
          id
          tissue
          tissueId
        }
        biomarkerList {
          name
          description
        }
        targetRole
        interactingTargetRole
        cellType
        interactingTargetFromSourceId
        phenotypicConsequenceLogFoldChange
        phenotypicConsequenceFDR
        phenotypicConsequencePValue
        geneticInteractionMethod
        geneticInteractionScore
        geneticInteractionPValue
        geneticInteractionFDR
        geneInteractionType
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Mn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Mn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Mn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Mn(a,n)})}var Ki={};(function(){ei.definitions.forEach(function(n){if(n.name){var i=new Set;Mn(n,i),Ki[n.name.value]=i}})})();function Lt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function eo(e,n){var i={kind:e.kind,definitions:[Lt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Ki[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Ki[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Lt(e,t);d&&i.definitions.push(d)}),i}eo(ei,"EncoreQuery");const no=q(e=>({primaryColor:{color:e.palette.primary.main,cursor:"pointer"},grey:{color:e.palette.grey[300]},circleUp:{marginRight:"10px"}})),io=e=>[{id:"disease",label:"Reported disease",renderCell:n=>r(m,{to:`/disease/${n.disease.id}`,children:n.disease.name}),filterValue:n=>n.disease.name+", "+n.disease.id},{id:"target",label:"Target A",renderCell:n=>r(h,{title:n.targetRole,children:r("span",{children:r(m,{to:`/target/${n.target.id}`,children:n.target.approvedSymbol})})}),filterValue:n=>n.target.approvedSymbol+", "+n.target.id},{id:"interactingTargetFromSourceId",label:"Target B",renderCell:n=>r(h,{title:n.interactingTargetRole,children:r("span",{children:r(m,{to:`/target/${n.target.id}`,children:n.interactingTargetFromSourceId})})})},{id:"phenotypicConsequenceLogFoldChange",label:"Cell count log fold change",tooltip:r(v,{children:"When a negative log fold change is measured, it means there is an excess of cell death."}),renderCell:n=>r(v,{children:r(h,{title:c(v,{children:[r(B,{label:"Log-fold change",description:n.phenotypicConsequenceLogFoldChange}),r(B,{label:"P-value",description:n.phenotypicConsequencePValue}),r(B,{label:"FDR",description:n.phenotypicConsequenceFDR})]}),children:c("span",{children:[r(H,{icon:Sr,size:"lg",className:Jt(n.phenotypicConsequenceLogFoldChange>=0?e.primaryColor:e.grey,e.circleUp)}),r(H,{icon:hr,size:"lg",className:n.phenotypicConsequenceLogFoldChange<0?e.primaryColor:e.grey})]})})})},{id:"geneticInteractionPValue",label:"Type of effect",renderCell:n=>r(h,{title:c(v,{children:[r(B,{label:"Method",description:n.geneticInteractionMethod}),r(B,{label:"Score",description:n.geneticInteractionScore}),r(B,{label:"P-value",description:n.geneticInteractionPValue}),r(B,{label:"FDR",description:n.geneticInteractionFDR})]}),children:r("span",{className:e.primaryColor,children:n.geneInteractionType})}),filterValue:n=>n.geneInteractionType},{id:"cellType",label:"Cell line",renderCell:n=>n.diseaseCellLines.map(i=>r(m,{external:!0,to:`https://cellmodelpassports.sanger.ac.uk/passports/${i.id}`,children:i.name}))},{id:"biomarkerList",label:"Cell line biomarkers",renderCell:n=>r(U,{small:!0,items:n.biomarkerList.map(i=>({label:i.name,tooltip:i.description}))})}],ao=[{label:"disease",exportValue:e=>e.disease.name},{label:"disease id",exportValue:e=>e.disease.id},{label:"target A",exportValue:e=>e.target.approvedSymbol},{label:"target A id",exportValue:e=>e.target.id},{label:"target B",exportValue:e=>e.interactingTargetFromSourceId},{label:"direction of effect",exportValue:e=>e.phenotypicConsequenceLogFoldChange>=0?"up":"down"},{label:"phenotypicConsequenceLogFoldChange",exportValue:e=>e.phenotypicConsequenceLogFoldChange},{label:"phenotypicConsequencePValue",exportValue:e=>e.phenotypicConsequencePValue},{label:"phenotypicConsequenceFDR",exportValue:e=>e.phenotypicConsequenceFDR},{label:"Cooperativity",exportValue:e=>e.geneticInteractionPValue>=.05?"Additive":"Synergistic"},{label:"geneticInteractionMethod",exportValue:e=>e.geneticInteractionMethod},{label:"geneticInteractionScore",exportValue:e=>e.geneticInteractionScore},{label:"geneticInteractionPValue",exportValue:e=>e.geneticInteractionPValue},{label:"geneticInteractionFDR",exportValue:e=>e.geneticInteractionFDR},{label:"cell line",exportValue:e=>e.cellType},{label:"cell line biomarkers",exportValue:e=>e.biomarkerList.join(",")}];function to({definition:e,id:n,label:i}){const{ensgId:a,efoId:s}=n,{data:l}=g(Ia.fragments.otEncoreSummary),o=w(ei,{variables:{ensemblId:a,efoId:s,size:l.otEncoreSummary.count}}),t=no();return r(F,{definition:e,chipText:f.ot_partner,request:o,renderDescription:()=>r(Zs,{symbol:i.symbol,name:i.name}),renderBody:({disease:d})=>{const{rows:u}=d.evidences;return r($,{columns:io(t),rows:u,dataDownloader:!0,dataDownloaderColumns:ao,dataDownloaderFileStem:`${a}-${s}-otencore`,showGlobalFilter:!0,sortBy:"geneticInteractionPValue",order:"asc",fixed:!0,noWrap:!1,noWrapHeader:!1,rowsPerPageOptions:V})}})}const Pt="encore",ro={id:Pt,name:"Open Targets ENCORE",shortName:"OT",hasData:({otEncoreSummary:e})=>e.count>0,isPrivate:ia(Pt)};var lo=Object.freeze(Object.defineProperty({__proto__:null,definition:ro,Summary:Ia,Body:to},Symbol.toStringTag,{value:"Module"})),Ue={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CancerBiomarkersEvidenceFragment"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"cancerBiomarkersSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"cancer_biomarkers",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:219}};Ue.loc.source={body:`fragment CancerBiomarkersEvidenceFragment on Disease {
  cancerBiomarkersSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["cancer_biomarkers"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function jn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){jn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){jn(a,n)}),e.definitions&&e.definitions.forEach(function(a){jn(a,n)})}var Xi={};(function(){Ue.definitions.forEach(function(n){if(n.name){var i=new Set;jn(n,i),Xi[n.name.value]=i}})})();function qt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function so(e,n){var i={kind:e.kind,definitions:[qt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Xi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Xi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=qt(e,t);d&&i.definitions.push(d)}),i}so(Ue,"CancerBiomarkersEvidenceFragment");function ar({definition:e}){const n=g(Ue);return r(I,{definition:e,request:n,renderSummary:({cancerBiomarkersSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.affected_pathway})}ar.fragments={CancerBiomarkersEvidenceFragment:Ue};function oo({symbol:e,diseaseName:n}){return c(v,{children:["Expert-curated genomic biomarkers of drug sensitivity, resistance, and toxicity for drugs targeting ",r("strong",{children:e})," with an experimental or approved indication of ",r("strong",{children:n}),". Source:"," ",r(m,{external:!0,to:"https://www.cancergenomeinterpreter.org/2018/biomarkers",children:"Cancer Genome Interpreter"}),"."]})}const uo=q(e=>({drawerLink:{cursor:"pointer",display:"inline-block",maxWidth:"420px",overflow:"hidden",textOverflow:"ellipsis"},backdrop:{"& .MuiBackdrop-root":{opacity:"0 !important"}},container:{backgroundColor:e.palette.grey[300],display:"unset"},title:{display:"flex",justifyContent:"space-between",backgroundColor:"white",borderBottom:"1px solid #ccc",fontSize:"1.2rem",fontWeight:"bold",padding:"1rem"},paper:{width:"420px",margin:"1rem",padding:"1rem"},biomarkerItem:{marginBottom:"8px"}}));function co({biomarkerName:e,biomarkers:n}){const i=uo(),[a,s]=E.exports.useState(!1);function l(){s(!a)}function o(){s(!1)}return n.length===0?"N/A":c(v,{children:[r(h,{title:e,children:r(Kt,{className:i.drawerLink,onClick:l,underline:"none",children:e})}),c(xr,{classes:{root:i.backdrop,paper:i.container},open:a,onClose:o,anchor:"right",children:[c(k,{className:i.title,children:["Biomarker",r(br,{onClick:o,children:r(Ar,{})})]}),n.variant?c(Ra,{className:i.paper,variant:"outlined",children:[r(k,{variant:"subtitle2",paragraph:!0,children:"Variant:"}),n.variant.map(t=>c("div",{className:i.biomarkerItem,children:[c("div",{children:[t.name," ",t.variantId?`(ID: ${t.variantId})`:null]}),t.functionalConsequenceId?r(m,{external:!0,to:`https://identifiers.org/${t.functionalConsequenceId.id}`,children:b(t.functionalConsequenceId.label)}):null]},t.name))]}):null,n.geneExpression?c(Ra,{className:i.paper,variant:"outlined",children:[r(k,{variant:"subtitle2",paragraph:!0,children:"Gene expression:"}),n.geneExpression.map(t=>c("div",{className:i.biomarkerItem,children:[r("div",{children:t.name}),r(m,{external:!0,to:`https://identifiers.org/${t.id.id}`,children:t.id.name})]},t.name))]}):null]})]})}var be={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CancerBiomarkersQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"cancer_biomarkers",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"diseaseFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biomarkerName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biomarkers"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"variant"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"variantId"},name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"functionalConsequenceId"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"label"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"geneExpression"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"drugFromSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"drug"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"drugResponse"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"literature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"urls"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"niceName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:957}};be.loc.source={body:`query CancerBiomarkersQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["cancer_biomarkers"]
      size: $size
    ) {
      count
      rows {
        disease {
          id
          name
        }
        diseaseFromSource
        biomarkerName
        biomarkers {
          variant {
            variantId: id
            name
            functionalConsequenceId {
              id
              label
            }
          }
          geneExpression {
            name
            id {
              id
              name
            }
          }
        }
        drugFromSource
        drug {
          id
          name
        }
        drugResponse {
          id
          name
        }
        confidence
        literature
        urls {
          niceName
          url
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Hn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Hn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Hn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Hn(a,n)})}var Zi={};(function(){be.definitions.forEach(function(n){if(n.name){var i=new Set;Hn(n,i),Zi[n.name.value]=i}})})();function Bt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function mo(e,n){var i={kind:e.kind,definitions:[Bt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=Zi[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=Zi[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Bt(e,t);d&&i.definitions.push(d)}),i}mo(be,"CancerBiomarkersQuery");const vo=[{id:"disease.name",label:"Disease",renderCell:({disease:e,diseaseFromSource:n})=>r(h,{title:c(v,{children:[r(k,{variant:"subtitle2",display:"block",align:"center",children:"Reported disease or phenotype:"}),r(k,{variant:"caption",display:"block",align:"center",children:n})]}),showHelpIcon:!0,children:r(m,{to:`/disease/${e.id}`,children:e.name})})},{id:"biomarkerName",label:"Biomarker",renderCell:({biomarkerName:e,biomarkers:n})=>r(co,{biomarkerName:e,biomarkers:n})},{id:"drug",label:"Reported drug",renderCell:({drug:e,drugFromSource:n})=>e?r(m,{to:`/drug/${e.id}`,children:e.name}):n,filterValue:({drug:e,drugFromSource:n})=>e?e.name:n},{id:"drugResponse.name",label:"Drug response",renderCell:({drugResponse:e})=>r(m,{to:`/disease/${e.id}`,children:e.name})},{id:"confidence",label:"Source",renderCell:({confidence:e,urls:n})=>{const i=n?n.map(a=>({url:a.url,name:a.niceName,group:"Sources"})):[];return r(M,{entries:i,message:e})}},{id:"literature",label:"Literature",renderCell:({literature:e})=>{const n=e?e.map(i=>({name:i,url:O(i),group:"literature"})):[];return r(P,{entries:n})}}];function ko(e){const{definition:n,id:i,label:a}=e,{ensgId:s,efoId:l}=i,{data:{disease:{cancerBiomarkersSummary:o}}}=g(),t={ensemblId:s,efoId:l,size:o.count},d=w(be,{variables:t});return r(F,{definition:n,chipText:f.affected_pathway,request:d,renderDescription:()=>r(oo,{symbol:a.symbol,diseaseName:a.name}),renderBody:({disease:u})=>{const{rows:S}=u.evidences;return r($,{columns:vo,rows:S,dataDownloader:!0,showGlobalFilter:!0,rowsPerPageOptions:V,query:be.loc.source.body,variables:t})}})}const fo={id:"cancerBiomarkers",name:"Cancer Biomarkers",shortName:"CB",hasData:e=>e.cancerBiomarkersSummary.count>0};var go=Object.freeze(Object.defineProperty({__proto__:null,definition:fo,Summary:ar,Body:ko},Symbol.toStringTag,{value:"Module"})),We={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"otValidationSummary"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Disease"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"otValidationSummary"},name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensgId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_crispr_validation",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"IntValue",value:"0"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:205}};We.loc.source={body:`fragment otValidationSummary on Disease {
  otValidationSummary: evidences(
    ensemblIds: [$ensgId]
    enableIndirect: true
    datasourceIds: ["ot_crispr_validation"]
    size: 0
  ) {
    count
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Un(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Un(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Un(a,n)}),e.definitions&&e.definitions.forEach(function(a){Un(a,n)})}var ea={};(function(){We.definitions.forEach(function(n){if(n.name){var i=new Set;Un(n,i),ea[n.name.value]=i}})})();function _t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function po(e,n){var i={kind:e.kind,definitions:[_t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=ea[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=ea[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=_t(e,t);d&&i.definitions.push(d)}),i}po(We,"otValidationSummary");function Fa({definition:e}){const n=g(We);return r(I,{definition:e,request:n,renderSummary:({otValidationSummary:i})=>{const{count:a}=i;return`${a} ${a===1?"entry":"entries"}`},subText:f.ot_validation_lab})}Fa.fragments={otValidationSummary:We};const So=({symbol:e,name:n})=>c(v,{children:["Data generated for targets identified in selected OTAR primary projects and have undergone independent prioritisation and orthogonal experimental validation in the Open Targets Validation Lab (OTVL), associating"," ",r("strong",{children:e})," and ",r("strong",{children:n}),". Source:"," ",r(m,{external:!0,to:"http://home.opentargets.org/OTAR2059",children:"Open Targets Validation Lab"})]});var ye={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ValidationQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ensemblId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"efoId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"size"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[{kind:"Argument",name:{kind:"Name",value:"efoId"},value:{kind:"Variable",name:{kind:"Name",value:"efoId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"evidences"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ensemblIds"},value:{kind:"ListValue",values:[{kind:"Variable",name:{kind:"Name",value:"ensemblId"}}]}},{kind:"Argument",name:{kind:"Name",value:"enableIndirect"},value:{kind:"BooleanValue",value:!0}},{kind:"Argument",name:{kind:"Name",value:"datasourceIds"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"ot_crispr_validation",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"size"},value:{kind:"Variable",name:{kind:"Name",value:"size"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"rows"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"disease"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"projectId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"projectDescription"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contrast"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"studyOverview"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"diseaseCellLines"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tissue"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tissueId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"resourceScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"biomarkerList"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"confidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expectedConfidence"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"validationHypotheses"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:762}};ye.loc.source={body:`query ValidationQuery($ensemblId: String!, $efoId: String!, $size: Int!) {
  disease(efoId: $efoId) {
    id
    evidences(
      ensemblIds: [$ensemblId]
      enableIndirect: true
      datasourceIds: ["ot_crispr_validation"]
      size: $size
    ) {
      rows {
        disease {
          id
          name
        }
        projectId
        projectDescription
        contrast
        studyOverview
        diseaseCellLines {
          id
          name
          tissue
          tissueId
        }
        resourceScore
        biomarkerList {
          name
          description
        }
        confidence
        expectedConfidence
        validationHypotheses {
          name
          description
          status
        }
      }
    }
  }
}
`,name:"GraphQL request",locationOffset:{line:1,column:1}};function Wn(e,n){if(e.kind==="FragmentSpread")n.add(e.name.value);else if(e.kind==="VariableDefinition"){var i=e.type;i.kind==="NamedType"&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach(function(a){Wn(a,n)}),e.variableDefinitions&&e.variableDefinitions.forEach(function(a){Wn(a,n)}),e.definitions&&e.definitions.forEach(function(a){Wn(a,n)})}var na={};(function(){ye.definitions.forEach(function(n){if(n.name){var i=new Set;Wn(n,i),na[n.name.value]=i}})})();function Qt(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function ho(e,n){var i={kind:e.kind,definitions:[Qt(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=na[n]||new Set,s=new Set,l=new Set;for(a.forEach(function(t){l.add(t)});l.size>0;){var o=l;l=new Set,o.forEach(function(t){if(!s.has(t)){s.add(t);var d=na[t]||new Set;d.forEach(function(u){l.add(u)})}})}return s.forEach(function(t){var d=Qt(e,t);d&&i.definitions.push(d)}),i}ho(ye,"ValidationQuery");const bo=q(e=>({primaryColor:{color:e.palette.primary.main},grey:{color:e.palette.grey[300]},circleUp:{marginRight:"10px"},hypotesisBox:{marginBottom:"2rem",paddingBottom:"1rem",borderBottom:`1px solid ${e.palette.grey[300]}`},hypotesisLegend:{marginBottom:"1rem"},bold:{fontWeight:700},hsLegendChip:{width:"32px"},hsGreen:{backgroundColor:"#407253",border:`1px solid ${e.palette.grey[600]}`},hsRed:{backgroundColor:"#9e1316",border:`1px solid ${e.palette.grey[600]}`},hsWhite:{backgroundColor:"#ffffff",color:e.palette.grey[600],border:`1px solid ${e.palette.grey[600]}`},hsGrey:{backgroundColor:e.palette.grey[500],border:`1px solid ${e.palette.grey[600]}`}})),Xn=(e,n)=>e&&n?e.toLowerCase()===n.toLowerCase():e.toLowerCase()==="significant",Gt=({isHit:e,classes:n})=>r(H,{icon:e?Ir:Or,size:"2x",className:e?n.primaryColor:n.grey}),Mt=[{status:"expected but not observed",expected:!0,observed:!1,styles:"hsGrey"},{status:"observed and expected",expected:!0,observed:!0,styles:"hsGreen"},{status:"not expected and not observed",expected:!1,observed:!1,styles:"hsWhite"},{status:"observed but not expected",expected:!1,observed:!0,styles:"hsRed"}],yo=e=>[{id:"disease",label:"Reported disease",renderCell:n=>r(m,{to:`/disease/${n.disease.id}`,children:n.disease.name}),filterValue:n=>n.diseaseLabel+", "+n.diseaseId},{id:"projectDescription",label:"OTAR primary project",renderCell:n=>c(m,{to:`http://home.opentargets.org/${n.projectId}`,external:!0,children:[n.projectDescription,r(k,{variant:"caption",display:"block",children:n.projectId})]}),filterValue:n=>n.projectDescription+", "+n.projectId},{id:"contrast",label:"Contrast",renderCell:n=>r(h,{title:n.studyOverview,showHelpIcon:!0,children:n.contrast}),filterValue:n=>n.contrast+", "+n.studyOverview},{id:"diseaseCellLines",label:"Cell line",renderCell:n=>r(v,{children:n.diseaseCellLines.map(i=>r(m,{to:`https://cellmodelpassports.sanger.ac.uk/passports/${i.id}`,external:!0,children:i.name},i.id))}),filterValue:n=>n.diseaseCellLines.map(i=>i.name+", "+i.id).join(", "),width:"8%"},{id:"biomarkerList",label:"Cell line biomarkers",renderCell:n=>r(U,{small:!0,items:n.biomarkerList.map(i=>({label:i.name,tooltip:i.description}))}),filterValue:n=>n.biomarkerList.map(i=>i.name+", "+i.description).join(", ")},{id:"resourceScore",label:"Effect size",renderCell:n=>r(v,{children:n.resourceScore}),numeric:!0,width:"8%"},{id:"confidence",label:"Hit",renderCell:n=>r(Gt,{isHit:Xn(n.confidence),classes:e}),width:"8%"},{id:"projectHit",label:"Primary project hit",renderCell:n=>r(Gt,{isHit:Xn(n.expectedConfidence),classes:e}),width:"8%"}],No=[{label:"disease",exportValue:e=>e.disease.name},{label:"disease id",exportValue:e=>e.disease.id},{label:"project description",exportValue:e=>e.projectDescription},{label:"project id",exportValue:e=>e.projectId},{label:"contrast",exportValue:e=>e.contrast},{label:"study overview",exportValue:e=>e.studyOverview},{label:"disease cell line",exportValue:e=>e.diseaseCellLines.map(n=>`${n.name} (${n.id})`)},{label:"biomarkers",exportValue:e=>e.biomarkerList.map(n=>n.name)},{label:"effect size",exportValue:e=>e.resourceScore},{label:"hit",exportValue:e=>Xn(e.confidence)},{label:"primary project hit",exportValue:e=>Xn(e.expectedConfidence)}];function Io({definition:e,id:{ensgId:n,efoId:i},label:{symbol:a,name:s}}){const{data:{otValidationSummary:{count:l}}}=g(Fa.fragments.otValidationSummary),o={ensemblId:n,efoId:i,size:l},t=w(ye,{variables:o}),d=bo();return r(F,{definition:e,chipText:f.ot_validation_lab,request:t,renderDescription:()=>r(So,{symbol:a,name:s}),renderBody:({disease:u})=>{const{rows:S}=u.evidences,C=yr.uniqBy(S.reduce((y,N)=>y.concat(N.validationHypotheses.map(T=>{var x;return{label:T.name,tooltip:T.description,customClass:d[(x=Mt.find(A=>A.status===T.status))==null?void 0:x.styles]||null}})),[]),"label");return c(v,{children:[c(_,{className:d.hypotesisBox,children:[c(k,{variant:"subtitle1",gutterBottom:!0,className:d.bold,children:["OTVL biomarker assessment for ",a]}),r("div",{className:d.hypotesisLegend,children:r(Z,{container:!0,spacing:4,direction:"row",children:Mt.map(y=>r(Z,{item:!0,children:c(Z,{container:!0,spacing:1,alignItems:"center",children:[r(Z,{item:!0,children:r(Nr,{className:Jt(d[y.styles],d.hsLegendChip)})}),c(Z,{item:!0,children:[c(k,{variant:"caption",display:"block",children:[r("span",{className:d.bold,children:y.expected?"Expected":"Not expected"})," ","in OTAR primary project"]}),c(k,{variant:"caption",display:"block",children:[r("span",{className:d.bold,children:y.observed?"Observed":"Not observed"})," ","in OTVL"]})]})]})},y.status))})}),r(U,{items:C})]}),r($,{columns:yo(d),rows:S,dataDownloader:!0,dataDownloaderColumns:No,dataDownloaderFileStem:`${n}-${i}-otvalidation`,showGlobalFilter:!0,sortBy:"resourceScore",order:"des",fixed:!0,noWrap:!1,noWrapHeader:!1,rowsPerPageOptions:V,query:ye.loc.source.body,variables:o})]})}})}const jt="validationlab",Fo={id:jt,name:"Open Targets Validation CRISPR",shortName:"VL",hasData:({otValidationSummary:e})=>e.count>0,isPrivate:ia(jt)};var wo=Object.freeze(Object.defineProperty({__proto__:null,definition:Fo,Summary:Fa,Body:Io},Symbol.toStringTag,{value:"Module"}));const Jn=[Cd,Md,xl,vd,ad,Vs,xs,dl,Qs,Ur,Nd,Ql,el,kl,go,vs,Xd,rs,bs,Dl,Jl,Ld,Ks,lo,wo].filter(e=>(ai.profile.hideEvidenceSectionIds.length===0||!ai.profile.hideEvidenceSectionIds.includes(e.definition.id))&&(!e.definition.isPrivate||e.definition.isPrivate&&ai.profile.isPartnerPreview)),$o=Dr(Jn,"Disease","EvidenceProfileSummaryFragment"),Vo=Fr`
  query EvidenceProfileQuery($ensgId: String!, $efoId: String!) {
    target(ensemblId: $ensgId) {
      id
      approvedSymbol
      approvedName
      functionDescriptions
      synonyms {
        label
        source
      }
    }
    disease(efoId: $efoId) {
      id
      name
      description
      synonyms {
        terms
        relation
      }
      ...EvidenceProfileSummaryFragment
    }
  }
  ${$o}
`;function Mo({ensgId:e,efoId:n,symbol:i,name:a}){return r(Er,{lsSectionsField:"evidence",entity:"disease",query:Vo,variables:{ensgId:e,efoId:n},children:c(Cr,{sections:Jn,children:[r(qr,{}),r(Tr,{children:Jn.map(({Summary:s,definition:l})=>r(s,{id:{ensgId:e,efoId:n},label:{symbol:i,name:a},definition:l},l.id))}),r(Rr,{children:Jn.map(({Body:s,definition:l})=>r(s,{id:{ensgId:e,efoId:n},label:{symbol:i,name:a},definition:l},l.id))})]})})}export{Mo as default};
